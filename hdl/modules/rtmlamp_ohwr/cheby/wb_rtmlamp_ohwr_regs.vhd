-- Do not edit.  Generated by cheby 1.5.dev0 using these options:
--  -i rtmlamp_ohwr_regs.cheby --hdl vhdl --gen-hdl wb_rtmlamp_ohwr_regs.vhd --doc html --gen-doc doc/wb_rtmlamp_ohwr_regs_wb.html --gen-c wb_rtmlamp_ohwr_regs.h --consts-style verilog --gen-consts ../../../sim/regs/wb_rtmlamp_ohwr_regs.vh --consts-style vhdl-ohwr --gen-consts ../../../sim/regs/wb_rtmlamp_ohwr_reg_consts.vhd
-- Generated on Mon May 23 15:40:40 2022 by augusto


library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use work.wishbone_pkg.all;

package wb_rtmlamp_ohwr_regs_pkg is
  type t_rtmlamp_ohwr_ch_regs_master_out is record
    ctl_amp_en       : std_logic;
    ctl_mode         : std_logic_vector(2 downto 0);
    pi_kp_data       : std_logic_vector(25 downto 0);
    pi_kp_reserved   : std_logic_vector(5 downto 0);
    pi_ti_data       : std_logic_vector(25 downto 0);
    pi_ti_reserved   : std_logic_vector(5 downto 0);
    pi_sp_data       : std_logic_vector(15 downto 0);
    pi_sp_reserved   : std_logic_vector(15 downto 0);
    dac_data         : std_logic_vector(15 downto 0);
    dac_reserved     : std_logic_vector(15 downto 0);
    lim_a            : std_logic_vector(15 downto 0);
    lim_b            : std_logic_vector(15 downto 0);
    cnt_data         : std_logic_vector(21 downto 0);
    cnt_reserved     : std_logic_vector(9 downto 0);
  end record t_rtmlamp_ohwr_ch_regs_master_out;
  subtype t_rtmlamp_ohwr_ch_regs_slave_in is t_rtmlamp_ohwr_ch_regs_master_out;

  type t_rtmlamp_ohwr_ch_regs_slave_out is record
    sta_amp_iflag_l  : std_logic;
    sta_amp_tflag_l  : std_logic;
    sta_amp_iflag_r  : std_logic;
    sta_amp_tflag_r  : std_logic;
    sta_reserved     : std_logic_vector(27 downto 0);
  end record t_rtmlamp_ohwr_ch_regs_slave_out;
  subtype t_rtmlamp_ohwr_ch_regs_master_in is t_rtmlamp_ohwr_ch_regs_slave_out;

  type t_rtmlamp_ohwr_ch_regs_master_out_array is array(natural range <>) of
    t_rtmlamp_ohwr_ch_regs_master_out;
  subtype t_rtmlamp_ohwr_ch_regs_slave_in_array is t_rtmlamp_ohwr_ch_regs_master_out_array;

  type t_rtmlamp_ohwr_ch_regs_master_in_array is array(natural range <>) of
    t_rtmlamp_ohwr_ch_regs_master_in;
  subtype t_rtmlamp_ohwr_ch_regs_slave_out_array is t_rtmlamp_ohwr_ch_regs_master_in_array;

end wb_rtmlamp_ohwr_regs_pkg;

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use work.wishbone_pkg.all;
use work.wb_rtmlamp_ohwr_regs_pkg.all;

entity wb_rtmlamp_ohwr_regs is
  port (
    rst_n_i              : in    std_logic;
    clk_i                : in    std_logic;
    wb_i                 : in    t_wishbone_slave_in;
    wb_o                 : out   t_wishbone_slave_out;

    -- General RTM status register
    -- reserved
    sta_reserved_i       : in    std_logic_vector(31 downto 0);

    -- General RTM control register
    -- reserved
    ctl_reserved_o       : out   std_logic_vector(31 downto 0);
    rtmlamp_ohwr_ch_regs_i : in    t_rtmlamp_ohwr_ch_regs_master_in_array(0 to 11);
    rtmlamp_ohwr_ch_regs_o : out   t_rtmlamp_ohwr_ch_regs_master_out_array(0 to 11)
  );
end wb_rtmlamp_ohwr_regs;

architecture syn of wb_rtmlamp_ohwr_regs is
  signal adr_int                        : std_logic_vector(10 downto 2);
  signal rd_req_int                     : std_logic;
  signal wr_req_int                     : std_logic;
  signal rd_ack_int                     : std_logic;
  signal wr_ack_int                     : std_logic;
  signal wb_en                          : std_logic;
  signal ack_int                        : std_logic;
  signal wb_rip                         : std_logic;
  signal wb_wip                         : std_logic;
  signal ctl_reserved_reg               : std_logic_vector(31 downto 0);
  signal ctl_wreq                       : std_logic;
  signal ctl_wack                       : std_logic;
  signal ch_0_ctl_amp_en_reg            : std_logic;
  signal ch_0_ctl_mode_reg              : std_logic_vector(2 downto 0);
  signal ch_0_ctl_wreq                  : std_logic;
  signal ch_0_ctl_wack                  : std_logic;
  signal ch_0_pi_kp_data_reg            : std_logic_vector(25 downto 0);
  signal ch_0_pi_kp_reserved_reg        : std_logic_vector(5 downto 0);
  signal ch_0_pi_kp_wreq                : std_logic;
  signal ch_0_pi_kp_wack                : std_logic;
  signal ch_0_pi_ti_data_reg            : std_logic_vector(25 downto 0);
  signal ch_0_pi_ti_reserved_reg        : std_logic_vector(5 downto 0);
  signal ch_0_pi_ti_wreq                : std_logic;
  signal ch_0_pi_ti_wack                : std_logic;
  signal ch_0_pi_sp_data_reg            : std_logic_vector(15 downto 0);
  signal ch_0_pi_sp_reserved_reg        : std_logic_vector(15 downto 0);
  signal ch_0_pi_sp_wreq                : std_logic;
  signal ch_0_pi_sp_wack                : std_logic;
  signal ch_0_dac_data_reg              : std_logic_vector(15 downto 0);
  signal ch_0_dac_reserved_reg          : std_logic_vector(15 downto 0);
  signal ch_0_dac_wreq                  : std_logic;
  signal ch_0_dac_wack                  : std_logic;
  signal ch_0_lim_a_reg                 : std_logic_vector(15 downto 0);
  signal ch_0_lim_b_reg                 : std_logic_vector(15 downto 0);
  signal ch_0_lim_wreq                  : std_logic;
  signal ch_0_lim_wack                  : std_logic;
  signal ch_0_cnt_data_reg              : std_logic_vector(21 downto 0);
  signal ch_0_cnt_reserved_reg          : std_logic_vector(9 downto 0);
  signal ch_0_cnt_wreq                  : std_logic;
  signal ch_0_cnt_wack                  : std_logic;
  signal ch_1_ctl_amp_en_reg            : std_logic;
  signal ch_1_ctl_mode_reg              : std_logic_vector(2 downto 0);
  signal ch_1_ctl_wreq                  : std_logic;
  signal ch_1_ctl_wack                  : std_logic;
  signal ch_1_pi_kp_data_reg            : std_logic_vector(25 downto 0);
  signal ch_1_pi_kp_reserved_reg        : std_logic_vector(5 downto 0);
  signal ch_1_pi_kp_wreq                : std_logic;
  signal ch_1_pi_kp_wack                : std_logic;
  signal ch_1_pi_ti_data_reg            : std_logic_vector(25 downto 0);
  signal ch_1_pi_ti_reserved_reg        : std_logic_vector(5 downto 0);
  signal ch_1_pi_ti_wreq                : std_logic;
  signal ch_1_pi_ti_wack                : std_logic;
  signal ch_1_pi_sp_data_reg            : std_logic_vector(15 downto 0);
  signal ch_1_pi_sp_reserved_reg        : std_logic_vector(15 downto 0);
  signal ch_1_pi_sp_wreq                : std_logic;
  signal ch_1_pi_sp_wack                : std_logic;
  signal ch_1_dac_data_reg              : std_logic_vector(15 downto 0);
  signal ch_1_dac_reserved_reg          : std_logic_vector(15 downto 0);
  signal ch_1_dac_wreq                  : std_logic;
  signal ch_1_dac_wack                  : std_logic;
  signal ch_1_lim_a_reg                 : std_logic_vector(15 downto 0);
  signal ch_1_lim_b_reg                 : std_logic_vector(15 downto 0);
  signal ch_1_lim_wreq                  : std_logic;
  signal ch_1_lim_wack                  : std_logic;
  signal ch_1_cnt_data_reg              : std_logic_vector(21 downto 0);
  signal ch_1_cnt_reserved_reg          : std_logic_vector(9 downto 0);
  signal ch_1_cnt_wreq                  : std_logic;
  signal ch_1_cnt_wack                  : std_logic;
  signal ch_2_ctl_amp_en_reg            : std_logic;
  signal ch_2_ctl_mode_reg              : std_logic_vector(2 downto 0);
  signal ch_2_ctl_wreq                  : std_logic;
  signal ch_2_ctl_wack                  : std_logic;
  signal ch_2_pi_kp_data_reg            : std_logic_vector(25 downto 0);
  signal ch_2_pi_kp_reserved_reg        : std_logic_vector(5 downto 0);
  signal ch_2_pi_kp_wreq                : std_logic;
  signal ch_2_pi_kp_wack                : std_logic;
  signal ch_2_pi_ti_data_reg            : std_logic_vector(25 downto 0);
  signal ch_2_pi_ti_reserved_reg        : std_logic_vector(5 downto 0);
  signal ch_2_pi_ti_wreq                : std_logic;
  signal ch_2_pi_ti_wack                : std_logic;
  signal ch_2_pi_sp_data_reg            : std_logic_vector(15 downto 0);
  signal ch_2_pi_sp_reserved_reg        : std_logic_vector(15 downto 0);
  signal ch_2_pi_sp_wreq                : std_logic;
  signal ch_2_pi_sp_wack                : std_logic;
  signal ch_2_dac_data_reg              : std_logic_vector(15 downto 0);
  signal ch_2_dac_reserved_reg          : std_logic_vector(15 downto 0);
  signal ch_2_dac_wreq                  : std_logic;
  signal ch_2_dac_wack                  : std_logic;
  signal ch_2_lim_a_reg                 : std_logic_vector(15 downto 0);
  signal ch_2_lim_b_reg                 : std_logic_vector(15 downto 0);
  signal ch_2_lim_wreq                  : std_logic;
  signal ch_2_lim_wack                  : std_logic;
  signal ch_2_cnt_data_reg              : std_logic_vector(21 downto 0);
  signal ch_2_cnt_reserved_reg          : std_logic_vector(9 downto 0);
  signal ch_2_cnt_wreq                  : std_logic;
  signal ch_2_cnt_wack                  : std_logic;
  signal ch_3_ctl_amp_en_reg            : std_logic;
  signal ch_3_ctl_mode_reg              : std_logic_vector(2 downto 0);
  signal ch_3_ctl_wreq                  : std_logic;
  signal ch_3_ctl_wack                  : std_logic;
  signal ch_3_pi_kp_data_reg            : std_logic_vector(25 downto 0);
  signal ch_3_pi_kp_reserved_reg        : std_logic_vector(5 downto 0);
  signal ch_3_pi_kp_wreq                : std_logic;
  signal ch_3_pi_kp_wack                : std_logic;
  signal ch_3_pi_ti_data_reg            : std_logic_vector(25 downto 0);
  signal ch_3_pi_ti_reserved_reg        : std_logic_vector(5 downto 0);
  signal ch_3_pi_ti_wreq                : std_logic;
  signal ch_3_pi_ti_wack                : std_logic;
  signal ch_3_pi_sp_data_reg            : std_logic_vector(15 downto 0);
  signal ch_3_pi_sp_reserved_reg        : std_logic_vector(15 downto 0);
  signal ch_3_pi_sp_wreq                : std_logic;
  signal ch_3_pi_sp_wack                : std_logic;
  signal ch_3_dac_data_reg              : std_logic_vector(15 downto 0);
  signal ch_3_dac_reserved_reg          : std_logic_vector(15 downto 0);
  signal ch_3_dac_wreq                  : std_logic;
  signal ch_3_dac_wack                  : std_logic;
  signal ch_3_lim_a_reg                 : std_logic_vector(15 downto 0);
  signal ch_3_lim_b_reg                 : std_logic_vector(15 downto 0);
  signal ch_3_lim_wreq                  : std_logic;
  signal ch_3_lim_wack                  : std_logic;
  signal ch_3_cnt_data_reg              : std_logic_vector(21 downto 0);
  signal ch_3_cnt_reserved_reg          : std_logic_vector(9 downto 0);
  signal ch_3_cnt_wreq                  : std_logic;
  signal ch_3_cnt_wack                  : std_logic;
  signal ch_4_ctl_amp_en_reg            : std_logic;
  signal ch_4_ctl_mode_reg              : std_logic_vector(2 downto 0);
  signal ch_4_ctl_wreq                  : std_logic;
  signal ch_4_ctl_wack                  : std_logic;
  signal ch_4_pi_kp_data_reg            : std_logic_vector(25 downto 0);
  signal ch_4_pi_kp_reserved_reg        : std_logic_vector(5 downto 0);
  signal ch_4_pi_kp_wreq                : std_logic;
  signal ch_4_pi_kp_wack                : std_logic;
  signal ch_4_pi_ti_data_reg            : std_logic_vector(25 downto 0);
  signal ch_4_pi_ti_reserved_reg        : std_logic_vector(5 downto 0);
  signal ch_4_pi_ti_wreq                : std_logic;
  signal ch_4_pi_ti_wack                : std_logic;
  signal ch_4_pi_sp_data_reg            : std_logic_vector(15 downto 0);
  signal ch_4_pi_sp_reserved_reg        : std_logic_vector(15 downto 0);
  signal ch_4_pi_sp_wreq                : std_logic;
  signal ch_4_pi_sp_wack                : std_logic;
  signal ch_4_dac_data_reg              : std_logic_vector(15 downto 0);
  signal ch_4_dac_reserved_reg          : std_logic_vector(15 downto 0);
  signal ch_4_dac_wreq                  : std_logic;
  signal ch_4_dac_wack                  : std_logic;
  signal ch_4_lim_a_reg                 : std_logic_vector(15 downto 0);
  signal ch_4_lim_b_reg                 : std_logic_vector(15 downto 0);
  signal ch_4_lim_wreq                  : std_logic;
  signal ch_4_lim_wack                  : std_logic;
  signal ch_4_cnt_data_reg              : std_logic_vector(21 downto 0);
  signal ch_4_cnt_reserved_reg          : std_logic_vector(9 downto 0);
  signal ch_4_cnt_wreq                  : std_logic;
  signal ch_4_cnt_wack                  : std_logic;
  signal ch_5_ctl_amp_en_reg            : std_logic;
  signal ch_5_ctl_mode_reg              : std_logic_vector(2 downto 0);
  signal ch_5_ctl_wreq                  : std_logic;
  signal ch_5_ctl_wack                  : std_logic;
  signal ch_5_pi_kp_data_reg            : std_logic_vector(25 downto 0);
  signal ch_5_pi_kp_reserved_reg        : std_logic_vector(5 downto 0);
  signal ch_5_pi_kp_wreq                : std_logic;
  signal ch_5_pi_kp_wack                : std_logic;
  signal ch_5_pi_ti_data_reg            : std_logic_vector(25 downto 0);
  signal ch_5_pi_ti_reserved_reg        : std_logic_vector(5 downto 0);
  signal ch_5_pi_ti_wreq                : std_logic;
  signal ch_5_pi_ti_wack                : std_logic;
  signal ch_5_pi_sp_data_reg            : std_logic_vector(15 downto 0);
  signal ch_5_pi_sp_reserved_reg        : std_logic_vector(15 downto 0);
  signal ch_5_pi_sp_wreq                : std_logic;
  signal ch_5_pi_sp_wack                : std_logic;
  signal ch_5_dac_data_reg              : std_logic_vector(15 downto 0);
  signal ch_5_dac_reserved_reg          : std_logic_vector(15 downto 0);
  signal ch_5_dac_wreq                  : std_logic;
  signal ch_5_dac_wack                  : std_logic;
  signal ch_5_lim_a_reg                 : std_logic_vector(15 downto 0);
  signal ch_5_lim_b_reg                 : std_logic_vector(15 downto 0);
  signal ch_5_lim_wreq                  : std_logic;
  signal ch_5_lim_wack                  : std_logic;
  signal ch_5_cnt_data_reg              : std_logic_vector(21 downto 0);
  signal ch_5_cnt_reserved_reg          : std_logic_vector(9 downto 0);
  signal ch_5_cnt_wreq                  : std_logic;
  signal ch_5_cnt_wack                  : std_logic;
  signal ch_6_ctl_amp_en_reg            : std_logic;
  signal ch_6_ctl_mode_reg              : std_logic_vector(2 downto 0);
  signal ch_6_ctl_wreq                  : std_logic;
  signal ch_6_ctl_wack                  : std_logic;
  signal ch_6_pi_kp_data_reg            : std_logic_vector(25 downto 0);
  signal ch_6_pi_kp_reserved_reg        : std_logic_vector(5 downto 0);
  signal ch_6_pi_kp_wreq                : std_logic;
  signal ch_6_pi_kp_wack                : std_logic;
  signal ch_6_pi_ti_data_reg            : std_logic_vector(25 downto 0);
  signal ch_6_pi_ti_reserved_reg        : std_logic_vector(5 downto 0);
  signal ch_6_pi_ti_wreq                : std_logic;
  signal ch_6_pi_ti_wack                : std_logic;
  signal ch_6_pi_sp_data_reg            : std_logic_vector(15 downto 0);
  signal ch_6_pi_sp_reserved_reg        : std_logic_vector(15 downto 0);
  signal ch_6_pi_sp_wreq                : std_logic;
  signal ch_6_pi_sp_wack                : std_logic;
  signal ch_6_dac_data_reg              : std_logic_vector(15 downto 0);
  signal ch_6_dac_reserved_reg          : std_logic_vector(15 downto 0);
  signal ch_6_dac_wreq                  : std_logic;
  signal ch_6_dac_wack                  : std_logic;
  signal ch_6_lim_a_reg                 : std_logic_vector(15 downto 0);
  signal ch_6_lim_b_reg                 : std_logic_vector(15 downto 0);
  signal ch_6_lim_wreq                  : std_logic;
  signal ch_6_lim_wack                  : std_logic;
  signal ch_6_cnt_data_reg              : std_logic_vector(21 downto 0);
  signal ch_6_cnt_reserved_reg          : std_logic_vector(9 downto 0);
  signal ch_6_cnt_wreq                  : std_logic;
  signal ch_6_cnt_wack                  : std_logic;
  signal ch_7_ctl_amp_en_reg            : std_logic;
  signal ch_7_ctl_mode_reg              : std_logic_vector(2 downto 0);
  signal ch_7_ctl_wreq                  : std_logic;
  signal ch_7_ctl_wack                  : std_logic;
  signal ch_7_pi_kp_data_reg            : std_logic_vector(25 downto 0);
  signal ch_7_pi_kp_reserved_reg        : std_logic_vector(5 downto 0);
  signal ch_7_pi_kp_wreq                : std_logic;
  signal ch_7_pi_kp_wack                : std_logic;
  signal ch_7_pi_ti_data_reg            : std_logic_vector(25 downto 0);
  signal ch_7_pi_ti_reserved_reg        : std_logic_vector(5 downto 0);
  signal ch_7_pi_ti_wreq                : std_logic;
  signal ch_7_pi_ti_wack                : std_logic;
  signal ch_7_pi_sp_data_reg            : std_logic_vector(15 downto 0);
  signal ch_7_pi_sp_reserved_reg        : std_logic_vector(15 downto 0);
  signal ch_7_pi_sp_wreq                : std_logic;
  signal ch_7_pi_sp_wack                : std_logic;
  signal ch_7_dac_data_reg              : std_logic_vector(15 downto 0);
  signal ch_7_dac_reserved_reg          : std_logic_vector(15 downto 0);
  signal ch_7_dac_wreq                  : std_logic;
  signal ch_7_dac_wack                  : std_logic;
  signal ch_7_lim_a_reg                 : std_logic_vector(15 downto 0);
  signal ch_7_lim_b_reg                 : std_logic_vector(15 downto 0);
  signal ch_7_lim_wreq                  : std_logic;
  signal ch_7_lim_wack                  : std_logic;
  signal ch_7_cnt_data_reg              : std_logic_vector(21 downto 0);
  signal ch_7_cnt_reserved_reg          : std_logic_vector(9 downto 0);
  signal ch_7_cnt_wreq                  : std_logic;
  signal ch_7_cnt_wack                  : std_logic;
  signal ch_8_ctl_amp_en_reg            : std_logic;
  signal ch_8_ctl_mode_reg              : std_logic_vector(2 downto 0);
  signal ch_8_ctl_wreq                  : std_logic;
  signal ch_8_ctl_wack                  : std_logic;
  signal ch_8_pi_kp_data_reg            : std_logic_vector(25 downto 0);
  signal ch_8_pi_kp_reserved_reg        : std_logic_vector(5 downto 0);
  signal ch_8_pi_kp_wreq                : std_logic;
  signal ch_8_pi_kp_wack                : std_logic;
  signal ch_8_pi_ti_data_reg            : std_logic_vector(25 downto 0);
  signal ch_8_pi_ti_reserved_reg        : std_logic_vector(5 downto 0);
  signal ch_8_pi_ti_wreq                : std_logic;
  signal ch_8_pi_ti_wack                : std_logic;
  signal ch_8_pi_sp_data_reg            : std_logic_vector(15 downto 0);
  signal ch_8_pi_sp_reserved_reg        : std_logic_vector(15 downto 0);
  signal ch_8_pi_sp_wreq                : std_logic;
  signal ch_8_pi_sp_wack                : std_logic;
  signal ch_8_dac_data_reg              : std_logic_vector(15 downto 0);
  signal ch_8_dac_reserved_reg          : std_logic_vector(15 downto 0);
  signal ch_8_dac_wreq                  : std_logic;
  signal ch_8_dac_wack                  : std_logic;
  signal ch_8_lim_a_reg                 : std_logic_vector(15 downto 0);
  signal ch_8_lim_b_reg                 : std_logic_vector(15 downto 0);
  signal ch_8_lim_wreq                  : std_logic;
  signal ch_8_lim_wack                  : std_logic;
  signal ch_8_cnt_data_reg              : std_logic_vector(21 downto 0);
  signal ch_8_cnt_reserved_reg          : std_logic_vector(9 downto 0);
  signal ch_8_cnt_wreq                  : std_logic;
  signal ch_8_cnt_wack                  : std_logic;
  signal ch_9_ctl_amp_en_reg            : std_logic;
  signal ch_9_ctl_mode_reg              : std_logic_vector(2 downto 0);
  signal ch_9_ctl_wreq                  : std_logic;
  signal ch_9_ctl_wack                  : std_logic;
  signal ch_9_pi_kp_data_reg            : std_logic_vector(25 downto 0);
  signal ch_9_pi_kp_reserved_reg        : std_logic_vector(5 downto 0);
  signal ch_9_pi_kp_wreq                : std_logic;
  signal ch_9_pi_kp_wack                : std_logic;
  signal ch_9_pi_ti_data_reg            : std_logic_vector(25 downto 0);
  signal ch_9_pi_ti_reserved_reg        : std_logic_vector(5 downto 0);
  signal ch_9_pi_ti_wreq                : std_logic;
  signal ch_9_pi_ti_wack                : std_logic;
  signal ch_9_pi_sp_data_reg            : std_logic_vector(15 downto 0);
  signal ch_9_pi_sp_reserved_reg        : std_logic_vector(15 downto 0);
  signal ch_9_pi_sp_wreq                : std_logic;
  signal ch_9_pi_sp_wack                : std_logic;
  signal ch_9_dac_data_reg              : std_logic_vector(15 downto 0);
  signal ch_9_dac_reserved_reg          : std_logic_vector(15 downto 0);
  signal ch_9_dac_wreq                  : std_logic;
  signal ch_9_dac_wack                  : std_logic;
  signal ch_9_lim_a_reg                 : std_logic_vector(15 downto 0);
  signal ch_9_lim_b_reg                 : std_logic_vector(15 downto 0);
  signal ch_9_lim_wreq                  : std_logic;
  signal ch_9_lim_wack                  : std_logic;
  signal ch_9_cnt_data_reg              : std_logic_vector(21 downto 0);
  signal ch_9_cnt_reserved_reg          : std_logic_vector(9 downto 0);
  signal ch_9_cnt_wreq                  : std_logic;
  signal ch_9_cnt_wack                  : std_logic;
  signal ch_10_ctl_amp_en_reg           : std_logic;
  signal ch_10_ctl_mode_reg             : std_logic_vector(2 downto 0);
  signal ch_10_ctl_wreq                 : std_logic;
  signal ch_10_ctl_wack                 : std_logic;
  signal ch_10_pi_kp_data_reg           : std_logic_vector(25 downto 0);
  signal ch_10_pi_kp_reserved_reg       : std_logic_vector(5 downto 0);
  signal ch_10_pi_kp_wreq               : std_logic;
  signal ch_10_pi_kp_wack               : std_logic;
  signal ch_10_pi_ti_data_reg           : std_logic_vector(25 downto 0);
  signal ch_10_pi_ti_reserved_reg       : std_logic_vector(5 downto 0);
  signal ch_10_pi_ti_wreq               : std_logic;
  signal ch_10_pi_ti_wack               : std_logic;
  signal ch_10_pi_sp_data_reg           : std_logic_vector(15 downto 0);
  signal ch_10_pi_sp_reserved_reg       : std_logic_vector(15 downto 0);
  signal ch_10_pi_sp_wreq               : std_logic;
  signal ch_10_pi_sp_wack               : std_logic;
  signal ch_10_dac_data_reg             : std_logic_vector(15 downto 0);
  signal ch_10_dac_reserved_reg         : std_logic_vector(15 downto 0);
  signal ch_10_dac_wreq                 : std_logic;
  signal ch_10_dac_wack                 : std_logic;
  signal ch_10_lim_a_reg                : std_logic_vector(15 downto 0);
  signal ch_10_lim_b_reg                : std_logic_vector(15 downto 0);
  signal ch_10_lim_wreq                 : std_logic;
  signal ch_10_lim_wack                 : std_logic;
  signal ch_10_cnt_data_reg             : std_logic_vector(21 downto 0);
  signal ch_10_cnt_reserved_reg         : std_logic_vector(9 downto 0);
  signal ch_10_cnt_wreq                 : std_logic;
  signal ch_10_cnt_wack                 : std_logic;
  signal ch_11_ctl_amp_en_reg           : std_logic;
  signal ch_11_ctl_mode_reg             : std_logic_vector(2 downto 0);
  signal ch_11_ctl_wreq                 : std_logic;
  signal ch_11_ctl_wack                 : std_logic;
  signal ch_11_pi_kp_data_reg           : std_logic_vector(25 downto 0);
  signal ch_11_pi_kp_reserved_reg       : std_logic_vector(5 downto 0);
  signal ch_11_pi_kp_wreq               : std_logic;
  signal ch_11_pi_kp_wack               : std_logic;
  signal ch_11_pi_ti_data_reg           : std_logic_vector(25 downto 0);
  signal ch_11_pi_ti_reserved_reg       : std_logic_vector(5 downto 0);
  signal ch_11_pi_ti_wreq               : std_logic;
  signal ch_11_pi_ti_wack               : std_logic;
  signal ch_11_pi_sp_data_reg           : std_logic_vector(15 downto 0);
  signal ch_11_pi_sp_reserved_reg       : std_logic_vector(15 downto 0);
  signal ch_11_pi_sp_wreq               : std_logic;
  signal ch_11_pi_sp_wack               : std_logic;
  signal ch_11_dac_data_reg             : std_logic_vector(15 downto 0);
  signal ch_11_dac_reserved_reg         : std_logic_vector(15 downto 0);
  signal ch_11_dac_wreq                 : std_logic;
  signal ch_11_dac_wack                 : std_logic;
  signal ch_11_lim_a_reg                : std_logic_vector(15 downto 0);
  signal ch_11_lim_b_reg                : std_logic_vector(15 downto 0);
  signal ch_11_lim_wreq                 : std_logic;
  signal ch_11_lim_wack                 : std_logic;
  signal ch_11_cnt_data_reg             : std_logic_vector(21 downto 0);
  signal ch_11_cnt_reserved_reg         : std_logic_vector(9 downto 0);
  signal ch_11_cnt_wreq                 : std_logic;
  signal ch_11_cnt_wack                 : std_logic;
  signal rd_ack_d0                      : std_logic;
  signal rd_dat_d0                      : std_logic_vector(31 downto 0);
  signal wr_req_d0                      : std_logic;
  signal wr_adr_d0                      : std_logic_vector(10 downto 2);
  signal wr_dat_d0                      : std_logic_vector(31 downto 0);
begin

  -- WB decode signals
  adr_int <= wb_i.adr(10 downto 2);
  wb_en <= wb_i.cyc and wb_i.stb;

  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        wb_rip <= '0';
      else
        wb_rip <= (wb_rip or (wb_en and not wb_i.we)) and not rd_ack_int;
      end if;
    end if;
  end process;
  rd_req_int <= (wb_en and not wb_i.we) and not wb_rip;

  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        wb_wip <= '0';
      else
        wb_wip <= (wb_wip or (wb_en and wb_i.we)) and not wr_ack_int;
      end if;
    end if;
  end process;
  wr_req_int <= (wb_en and wb_i.we) and not wb_wip;

  ack_int <= rd_ack_int or wr_ack_int;
  wb_o.ack <= ack_int;
  wb_o.stall <= not ack_int and wb_en;
  wb_o.rty <= '0';
  wb_o.err <= '0';

  -- pipelining for wr-in+rd-out
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        rd_ack_int <= '0';
        wr_req_d0 <= '0';
      else
        rd_ack_int <= rd_ack_d0;
        wb_o.dat <= rd_dat_d0;
        wr_req_d0 <= wr_req_int;
        wr_adr_d0 <= adr_int;
        wr_dat_d0 <= wb_i.dat;
      end if;
    end if;
  end process;

  -- Register sta

  -- Register ctl
  ctl_reserved_o <= ctl_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ctl_reserved_reg <= "00000000000000000000000000000000";
        ctl_wack <= '0';
      else
        if ctl_wreq = '1' then
          ctl_reserved_reg <= wr_dat_d0;
        end if;
        ctl_wack <= ctl_wreq;
      end if;
    end if;
  end process;

  -- Register ch_0_sta

  -- Register ch_0_ctl
  rtmlamp_ohwr_ch_regs_o(0).ctl_amp_en <= ch_0_ctl_amp_en_reg;
  rtmlamp_ohwr_ch_regs_o(0).ctl_mode <= ch_0_ctl_mode_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_0_ctl_amp_en_reg <= '0';
        ch_0_ctl_mode_reg <= "000";
        ch_0_ctl_wack <= '0';
      else
        if ch_0_ctl_wreq = '1' then
          ch_0_ctl_amp_en_reg <= wr_dat_d0(0);
          ch_0_ctl_mode_reg <= wr_dat_d0(3 downto 1);
        end if;
        ch_0_ctl_wack <= ch_0_ctl_wreq;
      end if;
    end if;
  end process;

  -- Register ch_0_pi_kp
  rtmlamp_ohwr_ch_regs_o(0).pi_kp_data <= ch_0_pi_kp_data_reg;
  rtmlamp_ohwr_ch_regs_o(0).pi_kp_reserved <= ch_0_pi_kp_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_0_pi_kp_data_reg <= "00000000000000000000000000";
        ch_0_pi_kp_reserved_reg <= "000000";
        ch_0_pi_kp_wack <= '0';
      else
        if ch_0_pi_kp_wreq = '1' then
          ch_0_pi_kp_data_reg <= wr_dat_d0(25 downto 0);
          ch_0_pi_kp_reserved_reg <= wr_dat_d0(31 downto 26);
        end if;
        ch_0_pi_kp_wack <= ch_0_pi_kp_wreq;
      end if;
    end if;
  end process;

  -- Register ch_0_pi_ti
  rtmlamp_ohwr_ch_regs_o(0).pi_ti_data <= ch_0_pi_ti_data_reg;
  rtmlamp_ohwr_ch_regs_o(0).pi_ti_reserved <= ch_0_pi_ti_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_0_pi_ti_data_reg <= "00000000000000000000000000";
        ch_0_pi_ti_reserved_reg <= "000000";
        ch_0_pi_ti_wack <= '0';
      else
        if ch_0_pi_ti_wreq = '1' then
          ch_0_pi_ti_data_reg <= wr_dat_d0(25 downto 0);
          ch_0_pi_ti_reserved_reg <= wr_dat_d0(31 downto 26);
        end if;
        ch_0_pi_ti_wack <= ch_0_pi_ti_wreq;
      end if;
    end if;
  end process;

  -- Register ch_0_pi_sp
  rtmlamp_ohwr_ch_regs_o(0).pi_sp_data <= ch_0_pi_sp_data_reg;
  rtmlamp_ohwr_ch_regs_o(0).pi_sp_reserved <= ch_0_pi_sp_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_0_pi_sp_data_reg <= "0000000000000000";
        ch_0_pi_sp_reserved_reg <= "0000000000000000";
        ch_0_pi_sp_wack <= '0';
      else
        if ch_0_pi_sp_wreq = '1' then
          ch_0_pi_sp_data_reg <= wr_dat_d0(15 downto 0);
          ch_0_pi_sp_reserved_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_0_pi_sp_wack <= ch_0_pi_sp_wreq;
      end if;
    end if;
  end process;

  -- Register ch_0_dac
  rtmlamp_ohwr_ch_regs_o(0).dac_data <= ch_0_dac_data_reg;
  rtmlamp_ohwr_ch_regs_o(0).dac_reserved <= ch_0_dac_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_0_dac_data_reg <= "0000000000000000";
        ch_0_dac_reserved_reg <= "0000000000000000";
        ch_0_dac_wack <= '0';
      else
        if ch_0_dac_wreq = '1' then
          ch_0_dac_data_reg <= wr_dat_d0(15 downto 0);
          ch_0_dac_reserved_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_0_dac_wack <= ch_0_dac_wreq;
      end if;
    end if;
  end process;

  -- Register ch_0_lim
  rtmlamp_ohwr_ch_regs_o(0).lim_a <= ch_0_lim_a_reg;
  rtmlamp_ohwr_ch_regs_o(0).lim_b <= ch_0_lim_b_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_0_lim_a_reg <= "0000000000000000";
        ch_0_lim_b_reg <= "0000000000000000";
        ch_0_lim_wack <= '0';
      else
        if ch_0_lim_wreq = '1' then
          ch_0_lim_a_reg <= wr_dat_d0(15 downto 0);
          ch_0_lim_b_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_0_lim_wack <= ch_0_lim_wreq;
      end if;
    end if;
  end process;

  -- Register ch_0_cnt
  rtmlamp_ohwr_ch_regs_o(0).cnt_data <= ch_0_cnt_data_reg;
  rtmlamp_ohwr_ch_regs_o(0).cnt_reserved <= ch_0_cnt_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_0_cnt_data_reg <= "0000000000000000000000";
        ch_0_cnt_reserved_reg <= "0000000000";
        ch_0_cnt_wack <= '0';
      else
        if ch_0_cnt_wreq = '1' then
          ch_0_cnt_data_reg <= wr_dat_d0(21 downto 0);
          ch_0_cnt_reserved_reg <= wr_dat_d0(31 downto 22);
        end if;
        ch_0_cnt_wack <= ch_0_cnt_wreq;
      end if;
    end if;
  end process;

  -- Register ch_1_sta

  -- Register ch_1_ctl
  rtmlamp_ohwr_ch_regs_o(1).ctl_amp_en <= ch_1_ctl_amp_en_reg;
  rtmlamp_ohwr_ch_regs_o(1).ctl_mode <= ch_1_ctl_mode_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_1_ctl_amp_en_reg <= '0';
        ch_1_ctl_mode_reg <= "000";
        ch_1_ctl_wack <= '0';
      else
        if ch_1_ctl_wreq = '1' then
          ch_1_ctl_amp_en_reg <= wr_dat_d0(0);
          ch_1_ctl_mode_reg <= wr_dat_d0(3 downto 1);
        end if;
        ch_1_ctl_wack <= ch_1_ctl_wreq;
      end if;
    end if;
  end process;

  -- Register ch_1_pi_kp
  rtmlamp_ohwr_ch_regs_o(1).pi_kp_data <= ch_1_pi_kp_data_reg;
  rtmlamp_ohwr_ch_regs_o(1).pi_kp_reserved <= ch_1_pi_kp_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_1_pi_kp_data_reg <= "00000000000000000000000000";
        ch_1_pi_kp_reserved_reg <= "000000";
        ch_1_pi_kp_wack <= '0';
      else
        if ch_1_pi_kp_wreq = '1' then
          ch_1_pi_kp_data_reg <= wr_dat_d0(25 downto 0);
          ch_1_pi_kp_reserved_reg <= wr_dat_d0(31 downto 26);
        end if;
        ch_1_pi_kp_wack <= ch_1_pi_kp_wreq;
      end if;
    end if;
  end process;

  -- Register ch_1_pi_ti
  rtmlamp_ohwr_ch_regs_o(1).pi_ti_data <= ch_1_pi_ti_data_reg;
  rtmlamp_ohwr_ch_regs_o(1).pi_ti_reserved <= ch_1_pi_ti_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_1_pi_ti_data_reg <= "00000000000000000000000000";
        ch_1_pi_ti_reserved_reg <= "000000";
        ch_1_pi_ti_wack <= '0';
      else
        if ch_1_pi_ti_wreq = '1' then
          ch_1_pi_ti_data_reg <= wr_dat_d0(25 downto 0);
          ch_1_pi_ti_reserved_reg <= wr_dat_d0(31 downto 26);
        end if;
        ch_1_pi_ti_wack <= ch_1_pi_ti_wreq;
      end if;
    end if;
  end process;

  -- Register ch_1_pi_sp
  rtmlamp_ohwr_ch_regs_o(1).pi_sp_data <= ch_1_pi_sp_data_reg;
  rtmlamp_ohwr_ch_regs_o(1).pi_sp_reserved <= ch_1_pi_sp_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_1_pi_sp_data_reg <= "0000000000000000";
        ch_1_pi_sp_reserved_reg <= "0000000000000000";
        ch_1_pi_sp_wack <= '0';
      else
        if ch_1_pi_sp_wreq = '1' then
          ch_1_pi_sp_data_reg <= wr_dat_d0(15 downto 0);
          ch_1_pi_sp_reserved_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_1_pi_sp_wack <= ch_1_pi_sp_wreq;
      end if;
    end if;
  end process;

  -- Register ch_1_dac
  rtmlamp_ohwr_ch_regs_o(1).dac_data <= ch_1_dac_data_reg;
  rtmlamp_ohwr_ch_regs_o(1).dac_reserved <= ch_1_dac_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_1_dac_data_reg <= "0000000000000000";
        ch_1_dac_reserved_reg <= "0000000000000000";
        ch_1_dac_wack <= '0';
      else
        if ch_1_dac_wreq = '1' then
          ch_1_dac_data_reg <= wr_dat_d0(15 downto 0);
          ch_1_dac_reserved_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_1_dac_wack <= ch_1_dac_wreq;
      end if;
    end if;
  end process;

  -- Register ch_1_lim
  rtmlamp_ohwr_ch_regs_o(1).lim_a <= ch_1_lim_a_reg;
  rtmlamp_ohwr_ch_regs_o(1).lim_b <= ch_1_lim_b_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_1_lim_a_reg <= "0000000000000000";
        ch_1_lim_b_reg <= "0000000000000000";
        ch_1_lim_wack <= '0';
      else
        if ch_1_lim_wreq = '1' then
          ch_1_lim_a_reg <= wr_dat_d0(15 downto 0);
          ch_1_lim_b_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_1_lim_wack <= ch_1_lim_wreq;
      end if;
    end if;
  end process;

  -- Register ch_1_cnt
  rtmlamp_ohwr_ch_regs_o(1).cnt_data <= ch_1_cnt_data_reg;
  rtmlamp_ohwr_ch_regs_o(1).cnt_reserved <= ch_1_cnt_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_1_cnt_data_reg <= "0000000000000000000000";
        ch_1_cnt_reserved_reg <= "0000000000";
        ch_1_cnt_wack <= '0';
      else
        if ch_1_cnt_wreq = '1' then
          ch_1_cnt_data_reg <= wr_dat_d0(21 downto 0);
          ch_1_cnt_reserved_reg <= wr_dat_d0(31 downto 22);
        end if;
        ch_1_cnt_wack <= ch_1_cnt_wreq;
      end if;
    end if;
  end process;

  -- Register ch_2_sta

  -- Register ch_2_ctl
  rtmlamp_ohwr_ch_regs_o(2).ctl_amp_en <= ch_2_ctl_amp_en_reg;
  rtmlamp_ohwr_ch_regs_o(2).ctl_mode <= ch_2_ctl_mode_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_2_ctl_amp_en_reg <= '0';
        ch_2_ctl_mode_reg <= "000";
        ch_2_ctl_wack <= '0';
      else
        if ch_2_ctl_wreq = '1' then
          ch_2_ctl_amp_en_reg <= wr_dat_d0(0);
          ch_2_ctl_mode_reg <= wr_dat_d0(3 downto 1);
        end if;
        ch_2_ctl_wack <= ch_2_ctl_wreq;
      end if;
    end if;
  end process;

  -- Register ch_2_pi_kp
  rtmlamp_ohwr_ch_regs_o(2).pi_kp_data <= ch_2_pi_kp_data_reg;
  rtmlamp_ohwr_ch_regs_o(2).pi_kp_reserved <= ch_2_pi_kp_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_2_pi_kp_data_reg <= "00000000000000000000000000";
        ch_2_pi_kp_reserved_reg <= "000000";
        ch_2_pi_kp_wack <= '0';
      else
        if ch_2_pi_kp_wreq = '1' then
          ch_2_pi_kp_data_reg <= wr_dat_d0(25 downto 0);
          ch_2_pi_kp_reserved_reg <= wr_dat_d0(31 downto 26);
        end if;
        ch_2_pi_kp_wack <= ch_2_pi_kp_wreq;
      end if;
    end if;
  end process;

  -- Register ch_2_pi_ti
  rtmlamp_ohwr_ch_regs_o(2).pi_ti_data <= ch_2_pi_ti_data_reg;
  rtmlamp_ohwr_ch_regs_o(2).pi_ti_reserved <= ch_2_pi_ti_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_2_pi_ti_data_reg <= "00000000000000000000000000";
        ch_2_pi_ti_reserved_reg <= "000000";
        ch_2_pi_ti_wack <= '0';
      else
        if ch_2_pi_ti_wreq = '1' then
          ch_2_pi_ti_data_reg <= wr_dat_d0(25 downto 0);
          ch_2_pi_ti_reserved_reg <= wr_dat_d0(31 downto 26);
        end if;
        ch_2_pi_ti_wack <= ch_2_pi_ti_wreq;
      end if;
    end if;
  end process;

  -- Register ch_2_pi_sp
  rtmlamp_ohwr_ch_regs_o(2).pi_sp_data <= ch_2_pi_sp_data_reg;
  rtmlamp_ohwr_ch_regs_o(2).pi_sp_reserved <= ch_2_pi_sp_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_2_pi_sp_data_reg <= "0000000000000000";
        ch_2_pi_sp_reserved_reg <= "0000000000000000";
        ch_2_pi_sp_wack <= '0';
      else
        if ch_2_pi_sp_wreq = '1' then
          ch_2_pi_sp_data_reg <= wr_dat_d0(15 downto 0);
          ch_2_pi_sp_reserved_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_2_pi_sp_wack <= ch_2_pi_sp_wreq;
      end if;
    end if;
  end process;

  -- Register ch_2_dac
  rtmlamp_ohwr_ch_regs_o(2).dac_data <= ch_2_dac_data_reg;
  rtmlamp_ohwr_ch_regs_o(2).dac_reserved <= ch_2_dac_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_2_dac_data_reg <= "0000000000000000";
        ch_2_dac_reserved_reg <= "0000000000000000";
        ch_2_dac_wack <= '0';
      else
        if ch_2_dac_wreq = '1' then
          ch_2_dac_data_reg <= wr_dat_d0(15 downto 0);
          ch_2_dac_reserved_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_2_dac_wack <= ch_2_dac_wreq;
      end if;
    end if;
  end process;

  -- Register ch_2_lim
  rtmlamp_ohwr_ch_regs_o(2).lim_a <= ch_2_lim_a_reg;
  rtmlamp_ohwr_ch_regs_o(2).lim_b <= ch_2_lim_b_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_2_lim_a_reg <= "0000000000000000";
        ch_2_lim_b_reg <= "0000000000000000";
        ch_2_lim_wack <= '0';
      else
        if ch_2_lim_wreq = '1' then
          ch_2_lim_a_reg <= wr_dat_d0(15 downto 0);
          ch_2_lim_b_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_2_lim_wack <= ch_2_lim_wreq;
      end if;
    end if;
  end process;

  -- Register ch_2_cnt
  rtmlamp_ohwr_ch_regs_o(2).cnt_data <= ch_2_cnt_data_reg;
  rtmlamp_ohwr_ch_regs_o(2).cnt_reserved <= ch_2_cnt_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_2_cnt_data_reg <= "0000000000000000000000";
        ch_2_cnt_reserved_reg <= "0000000000";
        ch_2_cnt_wack <= '0';
      else
        if ch_2_cnt_wreq = '1' then
          ch_2_cnt_data_reg <= wr_dat_d0(21 downto 0);
          ch_2_cnt_reserved_reg <= wr_dat_d0(31 downto 22);
        end if;
        ch_2_cnt_wack <= ch_2_cnt_wreq;
      end if;
    end if;
  end process;

  -- Register ch_3_sta

  -- Register ch_3_ctl
  rtmlamp_ohwr_ch_regs_o(3).ctl_amp_en <= ch_3_ctl_amp_en_reg;
  rtmlamp_ohwr_ch_regs_o(3).ctl_mode <= ch_3_ctl_mode_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_3_ctl_amp_en_reg <= '0';
        ch_3_ctl_mode_reg <= "000";
        ch_3_ctl_wack <= '0';
      else
        if ch_3_ctl_wreq = '1' then
          ch_3_ctl_amp_en_reg <= wr_dat_d0(0);
          ch_3_ctl_mode_reg <= wr_dat_d0(3 downto 1);
        end if;
        ch_3_ctl_wack <= ch_3_ctl_wreq;
      end if;
    end if;
  end process;

  -- Register ch_3_pi_kp
  rtmlamp_ohwr_ch_regs_o(3).pi_kp_data <= ch_3_pi_kp_data_reg;
  rtmlamp_ohwr_ch_regs_o(3).pi_kp_reserved <= ch_3_pi_kp_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_3_pi_kp_data_reg <= "00000000000000000000000000";
        ch_3_pi_kp_reserved_reg <= "000000";
        ch_3_pi_kp_wack <= '0';
      else
        if ch_3_pi_kp_wreq = '1' then
          ch_3_pi_kp_data_reg <= wr_dat_d0(25 downto 0);
          ch_3_pi_kp_reserved_reg <= wr_dat_d0(31 downto 26);
        end if;
        ch_3_pi_kp_wack <= ch_3_pi_kp_wreq;
      end if;
    end if;
  end process;

  -- Register ch_3_pi_ti
  rtmlamp_ohwr_ch_regs_o(3).pi_ti_data <= ch_3_pi_ti_data_reg;
  rtmlamp_ohwr_ch_regs_o(3).pi_ti_reserved <= ch_3_pi_ti_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_3_pi_ti_data_reg <= "00000000000000000000000000";
        ch_3_pi_ti_reserved_reg <= "000000";
        ch_3_pi_ti_wack <= '0';
      else
        if ch_3_pi_ti_wreq = '1' then
          ch_3_pi_ti_data_reg <= wr_dat_d0(25 downto 0);
          ch_3_pi_ti_reserved_reg <= wr_dat_d0(31 downto 26);
        end if;
        ch_3_pi_ti_wack <= ch_3_pi_ti_wreq;
      end if;
    end if;
  end process;

  -- Register ch_3_pi_sp
  rtmlamp_ohwr_ch_regs_o(3).pi_sp_data <= ch_3_pi_sp_data_reg;
  rtmlamp_ohwr_ch_regs_o(3).pi_sp_reserved <= ch_3_pi_sp_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_3_pi_sp_data_reg <= "0000000000000000";
        ch_3_pi_sp_reserved_reg <= "0000000000000000";
        ch_3_pi_sp_wack <= '0';
      else
        if ch_3_pi_sp_wreq = '1' then
          ch_3_pi_sp_data_reg <= wr_dat_d0(15 downto 0);
          ch_3_pi_sp_reserved_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_3_pi_sp_wack <= ch_3_pi_sp_wreq;
      end if;
    end if;
  end process;

  -- Register ch_3_dac
  rtmlamp_ohwr_ch_regs_o(3).dac_data <= ch_3_dac_data_reg;
  rtmlamp_ohwr_ch_regs_o(3).dac_reserved <= ch_3_dac_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_3_dac_data_reg <= "0000000000000000";
        ch_3_dac_reserved_reg <= "0000000000000000";
        ch_3_dac_wack <= '0';
      else
        if ch_3_dac_wreq = '1' then
          ch_3_dac_data_reg <= wr_dat_d0(15 downto 0);
          ch_3_dac_reserved_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_3_dac_wack <= ch_3_dac_wreq;
      end if;
    end if;
  end process;

  -- Register ch_3_lim
  rtmlamp_ohwr_ch_regs_o(3).lim_a <= ch_3_lim_a_reg;
  rtmlamp_ohwr_ch_regs_o(3).lim_b <= ch_3_lim_b_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_3_lim_a_reg <= "0000000000000000";
        ch_3_lim_b_reg <= "0000000000000000";
        ch_3_lim_wack <= '0';
      else
        if ch_3_lim_wreq = '1' then
          ch_3_lim_a_reg <= wr_dat_d0(15 downto 0);
          ch_3_lim_b_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_3_lim_wack <= ch_3_lim_wreq;
      end if;
    end if;
  end process;

  -- Register ch_3_cnt
  rtmlamp_ohwr_ch_regs_o(3).cnt_data <= ch_3_cnt_data_reg;
  rtmlamp_ohwr_ch_regs_o(3).cnt_reserved <= ch_3_cnt_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_3_cnt_data_reg <= "0000000000000000000000";
        ch_3_cnt_reserved_reg <= "0000000000";
        ch_3_cnt_wack <= '0';
      else
        if ch_3_cnt_wreq = '1' then
          ch_3_cnt_data_reg <= wr_dat_d0(21 downto 0);
          ch_3_cnt_reserved_reg <= wr_dat_d0(31 downto 22);
        end if;
        ch_3_cnt_wack <= ch_3_cnt_wreq;
      end if;
    end if;
  end process;

  -- Register ch_4_sta

  -- Register ch_4_ctl
  rtmlamp_ohwr_ch_regs_o(4).ctl_amp_en <= ch_4_ctl_amp_en_reg;
  rtmlamp_ohwr_ch_regs_o(4).ctl_mode <= ch_4_ctl_mode_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_4_ctl_amp_en_reg <= '0';
        ch_4_ctl_mode_reg <= "000";
        ch_4_ctl_wack <= '0';
      else
        if ch_4_ctl_wreq = '1' then
          ch_4_ctl_amp_en_reg <= wr_dat_d0(0);
          ch_4_ctl_mode_reg <= wr_dat_d0(3 downto 1);
        end if;
        ch_4_ctl_wack <= ch_4_ctl_wreq;
      end if;
    end if;
  end process;

  -- Register ch_4_pi_kp
  rtmlamp_ohwr_ch_regs_o(4).pi_kp_data <= ch_4_pi_kp_data_reg;
  rtmlamp_ohwr_ch_regs_o(4).pi_kp_reserved <= ch_4_pi_kp_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_4_pi_kp_data_reg <= "00000000000000000000000000";
        ch_4_pi_kp_reserved_reg <= "000000";
        ch_4_pi_kp_wack <= '0';
      else
        if ch_4_pi_kp_wreq = '1' then
          ch_4_pi_kp_data_reg <= wr_dat_d0(25 downto 0);
          ch_4_pi_kp_reserved_reg <= wr_dat_d0(31 downto 26);
        end if;
        ch_4_pi_kp_wack <= ch_4_pi_kp_wreq;
      end if;
    end if;
  end process;

  -- Register ch_4_pi_ti
  rtmlamp_ohwr_ch_regs_o(4).pi_ti_data <= ch_4_pi_ti_data_reg;
  rtmlamp_ohwr_ch_regs_o(4).pi_ti_reserved <= ch_4_pi_ti_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_4_pi_ti_data_reg <= "00000000000000000000000000";
        ch_4_pi_ti_reserved_reg <= "000000";
        ch_4_pi_ti_wack <= '0';
      else
        if ch_4_pi_ti_wreq = '1' then
          ch_4_pi_ti_data_reg <= wr_dat_d0(25 downto 0);
          ch_4_pi_ti_reserved_reg <= wr_dat_d0(31 downto 26);
        end if;
        ch_4_pi_ti_wack <= ch_4_pi_ti_wreq;
      end if;
    end if;
  end process;

  -- Register ch_4_pi_sp
  rtmlamp_ohwr_ch_regs_o(4).pi_sp_data <= ch_4_pi_sp_data_reg;
  rtmlamp_ohwr_ch_regs_o(4).pi_sp_reserved <= ch_4_pi_sp_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_4_pi_sp_data_reg <= "0000000000000000";
        ch_4_pi_sp_reserved_reg <= "0000000000000000";
        ch_4_pi_sp_wack <= '0';
      else
        if ch_4_pi_sp_wreq = '1' then
          ch_4_pi_sp_data_reg <= wr_dat_d0(15 downto 0);
          ch_4_pi_sp_reserved_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_4_pi_sp_wack <= ch_4_pi_sp_wreq;
      end if;
    end if;
  end process;

  -- Register ch_4_dac
  rtmlamp_ohwr_ch_regs_o(4).dac_data <= ch_4_dac_data_reg;
  rtmlamp_ohwr_ch_regs_o(4).dac_reserved <= ch_4_dac_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_4_dac_data_reg <= "0000000000000000";
        ch_4_dac_reserved_reg <= "0000000000000000";
        ch_4_dac_wack <= '0';
      else
        if ch_4_dac_wreq = '1' then
          ch_4_dac_data_reg <= wr_dat_d0(15 downto 0);
          ch_4_dac_reserved_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_4_dac_wack <= ch_4_dac_wreq;
      end if;
    end if;
  end process;

  -- Register ch_4_lim
  rtmlamp_ohwr_ch_regs_o(4).lim_a <= ch_4_lim_a_reg;
  rtmlamp_ohwr_ch_regs_o(4).lim_b <= ch_4_lim_b_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_4_lim_a_reg <= "0000000000000000";
        ch_4_lim_b_reg <= "0000000000000000";
        ch_4_lim_wack <= '0';
      else
        if ch_4_lim_wreq = '1' then
          ch_4_lim_a_reg <= wr_dat_d0(15 downto 0);
          ch_4_lim_b_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_4_lim_wack <= ch_4_lim_wreq;
      end if;
    end if;
  end process;

  -- Register ch_4_cnt
  rtmlamp_ohwr_ch_regs_o(4).cnt_data <= ch_4_cnt_data_reg;
  rtmlamp_ohwr_ch_regs_o(4).cnt_reserved <= ch_4_cnt_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_4_cnt_data_reg <= "0000000000000000000000";
        ch_4_cnt_reserved_reg <= "0000000000";
        ch_4_cnt_wack <= '0';
      else
        if ch_4_cnt_wreq = '1' then
          ch_4_cnt_data_reg <= wr_dat_d0(21 downto 0);
          ch_4_cnt_reserved_reg <= wr_dat_d0(31 downto 22);
        end if;
        ch_4_cnt_wack <= ch_4_cnt_wreq;
      end if;
    end if;
  end process;

  -- Register ch_5_sta

  -- Register ch_5_ctl
  rtmlamp_ohwr_ch_regs_o(5).ctl_amp_en <= ch_5_ctl_amp_en_reg;
  rtmlamp_ohwr_ch_regs_o(5).ctl_mode <= ch_5_ctl_mode_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_5_ctl_amp_en_reg <= '0';
        ch_5_ctl_mode_reg <= "000";
        ch_5_ctl_wack <= '0';
      else
        if ch_5_ctl_wreq = '1' then
          ch_5_ctl_amp_en_reg <= wr_dat_d0(0);
          ch_5_ctl_mode_reg <= wr_dat_d0(3 downto 1);
        end if;
        ch_5_ctl_wack <= ch_5_ctl_wreq;
      end if;
    end if;
  end process;

  -- Register ch_5_pi_kp
  rtmlamp_ohwr_ch_regs_o(5).pi_kp_data <= ch_5_pi_kp_data_reg;
  rtmlamp_ohwr_ch_regs_o(5).pi_kp_reserved <= ch_5_pi_kp_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_5_pi_kp_data_reg <= "00000000000000000000000000";
        ch_5_pi_kp_reserved_reg <= "000000";
        ch_5_pi_kp_wack <= '0';
      else
        if ch_5_pi_kp_wreq = '1' then
          ch_5_pi_kp_data_reg <= wr_dat_d0(25 downto 0);
          ch_5_pi_kp_reserved_reg <= wr_dat_d0(31 downto 26);
        end if;
        ch_5_pi_kp_wack <= ch_5_pi_kp_wreq;
      end if;
    end if;
  end process;

  -- Register ch_5_pi_ti
  rtmlamp_ohwr_ch_regs_o(5).pi_ti_data <= ch_5_pi_ti_data_reg;
  rtmlamp_ohwr_ch_regs_o(5).pi_ti_reserved <= ch_5_pi_ti_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_5_pi_ti_data_reg <= "00000000000000000000000000";
        ch_5_pi_ti_reserved_reg <= "000000";
        ch_5_pi_ti_wack <= '0';
      else
        if ch_5_pi_ti_wreq = '1' then
          ch_5_pi_ti_data_reg <= wr_dat_d0(25 downto 0);
          ch_5_pi_ti_reserved_reg <= wr_dat_d0(31 downto 26);
        end if;
        ch_5_pi_ti_wack <= ch_5_pi_ti_wreq;
      end if;
    end if;
  end process;

  -- Register ch_5_pi_sp
  rtmlamp_ohwr_ch_regs_o(5).pi_sp_data <= ch_5_pi_sp_data_reg;
  rtmlamp_ohwr_ch_regs_o(5).pi_sp_reserved <= ch_5_pi_sp_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_5_pi_sp_data_reg <= "0000000000000000";
        ch_5_pi_sp_reserved_reg <= "0000000000000000";
        ch_5_pi_sp_wack <= '0';
      else
        if ch_5_pi_sp_wreq = '1' then
          ch_5_pi_sp_data_reg <= wr_dat_d0(15 downto 0);
          ch_5_pi_sp_reserved_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_5_pi_sp_wack <= ch_5_pi_sp_wreq;
      end if;
    end if;
  end process;

  -- Register ch_5_dac
  rtmlamp_ohwr_ch_regs_o(5).dac_data <= ch_5_dac_data_reg;
  rtmlamp_ohwr_ch_regs_o(5).dac_reserved <= ch_5_dac_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_5_dac_data_reg <= "0000000000000000";
        ch_5_dac_reserved_reg <= "0000000000000000";
        ch_5_dac_wack <= '0';
      else
        if ch_5_dac_wreq = '1' then
          ch_5_dac_data_reg <= wr_dat_d0(15 downto 0);
          ch_5_dac_reserved_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_5_dac_wack <= ch_5_dac_wreq;
      end if;
    end if;
  end process;

  -- Register ch_5_lim
  rtmlamp_ohwr_ch_regs_o(5).lim_a <= ch_5_lim_a_reg;
  rtmlamp_ohwr_ch_regs_o(5).lim_b <= ch_5_lim_b_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_5_lim_a_reg <= "0000000000000000";
        ch_5_lim_b_reg <= "0000000000000000";
        ch_5_lim_wack <= '0';
      else
        if ch_5_lim_wreq = '1' then
          ch_5_lim_a_reg <= wr_dat_d0(15 downto 0);
          ch_5_lim_b_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_5_lim_wack <= ch_5_lim_wreq;
      end if;
    end if;
  end process;

  -- Register ch_5_cnt
  rtmlamp_ohwr_ch_regs_o(5).cnt_data <= ch_5_cnt_data_reg;
  rtmlamp_ohwr_ch_regs_o(5).cnt_reserved <= ch_5_cnt_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_5_cnt_data_reg <= "0000000000000000000000";
        ch_5_cnt_reserved_reg <= "0000000000";
        ch_5_cnt_wack <= '0';
      else
        if ch_5_cnt_wreq = '1' then
          ch_5_cnt_data_reg <= wr_dat_d0(21 downto 0);
          ch_5_cnt_reserved_reg <= wr_dat_d0(31 downto 22);
        end if;
        ch_5_cnt_wack <= ch_5_cnt_wreq;
      end if;
    end if;
  end process;

  -- Register ch_6_sta

  -- Register ch_6_ctl
  rtmlamp_ohwr_ch_regs_o(6).ctl_amp_en <= ch_6_ctl_amp_en_reg;
  rtmlamp_ohwr_ch_regs_o(6).ctl_mode <= ch_6_ctl_mode_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_6_ctl_amp_en_reg <= '0';
        ch_6_ctl_mode_reg <= "000";
        ch_6_ctl_wack <= '0';
      else
        if ch_6_ctl_wreq = '1' then
          ch_6_ctl_amp_en_reg <= wr_dat_d0(0);
          ch_6_ctl_mode_reg <= wr_dat_d0(3 downto 1);
        end if;
        ch_6_ctl_wack <= ch_6_ctl_wreq;
      end if;
    end if;
  end process;

  -- Register ch_6_pi_kp
  rtmlamp_ohwr_ch_regs_o(6).pi_kp_data <= ch_6_pi_kp_data_reg;
  rtmlamp_ohwr_ch_regs_o(6).pi_kp_reserved <= ch_6_pi_kp_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_6_pi_kp_data_reg <= "00000000000000000000000000";
        ch_6_pi_kp_reserved_reg <= "000000";
        ch_6_pi_kp_wack <= '0';
      else
        if ch_6_pi_kp_wreq = '1' then
          ch_6_pi_kp_data_reg <= wr_dat_d0(25 downto 0);
          ch_6_pi_kp_reserved_reg <= wr_dat_d0(31 downto 26);
        end if;
        ch_6_pi_kp_wack <= ch_6_pi_kp_wreq;
      end if;
    end if;
  end process;

  -- Register ch_6_pi_ti
  rtmlamp_ohwr_ch_regs_o(6).pi_ti_data <= ch_6_pi_ti_data_reg;
  rtmlamp_ohwr_ch_regs_o(6).pi_ti_reserved <= ch_6_pi_ti_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_6_pi_ti_data_reg <= "00000000000000000000000000";
        ch_6_pi_ti_reserved_reg <= "000000";
        ch_6_pi_ti_wack <= '0';
      else
        if ch_6_pi_ti_wreq = '1' then
          ch_6_pi_ti_data_reg <= wr_dat_d0(25 downto 0);
          ch_6_pi_ti_reserved_reg <= wr_dat_d0(31 downto 26);
        end if;
        ch_6_pi_ti_wack <= ch_6_pi_ti_wreq;
      end if;
    end if;
  end process;

  -- Register ch_6_pi_sp
  rtmlamp_ohwr_ch_regs_o(6).pi_sp_data <= ch_6_pi_sp_data_reg;
  rtmlamp_ohwr_ch_regs_o(6).pi_sp_reserved <= ch_6_pi_sp_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_6_pi_sp_data_reg <= "0000000000000000";
        ch_6_pi_sp_reserved_reg <= "0000000000000000";
        ch_6_pi_sp_wack <= '0';
      else
        if ch_6_pi_sp_wreq = '1' then
          ch_6_pi_sp_data_reg <= wr_dat_d0(15 downto 0);
          ch_6_pi_sp_reserved_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_6_pi_sp_wack <= ch_6_pi_sp_wreq;
      end if;
    end if;
  end process;

  -- Register ch_6_dac
  rtmlamp_ohwr_ch_regs_o(6).dac_data <= ch_6_dac_data_reg;
  rtmlamp_ohwr_ch_regs_o(6).dac_reserved <= ch_6_dac_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_6_dac_data_reg <= "0000000000000000";
        ch_6_dac_reserved_reg <= "0000000000000000";
        ch_6_dac_wack <= '0';
      else
        if ch_6_dac_wreq = '1' then
          ch_6_dac_data_reg <= wr_dat_d0(15 downto 0);
          ch_6_dac_reserved_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_6_dac_wack <= ch_6_dac_wreq;
      end if;
    end if;
  end process;

  -- Register ch_6_lim
  rtmlamp_ohwr_ch_regs_o(6).lim_a <= ch_6_lim_a_reg;
  rtmlamp_ohwr_ch_regs_o(6).lim_b <= ch_6_lim_b_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_6_lim_a_reg <= "0000000000000000";
        ch_6_lim_b_reg <= "0000000000000000";
        ch_6_lim_wack <= '0';
      else
        if ch_6_lim_wreq = '1' then
          ch_6_lim_a_reg <= wr_dat_d0(15 downto 0);
          ch_6_lim_b_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_6_lim_wack <= ch_6_lim_wreq;
      end if;
    end if;
  end process;

  -- Register ch_6_cnt
  rtmlamp_ohwr_ch_regs_o(6).cnt_data <= ch_6_cnt_data_reg;
  rtmlamp_ohwr_ch_regs_o(6).cnt_reserved <= ch_6_cnt_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_6_cnt_data_reg <= "0000000000000000000000";
        ch_6_cnt_reserved_reg <= "0000000000";
        ch_6_cnt_wack <= '0';
      else
        if ch_6_cnt_wreq = '1' then
          ch_6_cnt_data_reg <= wr_dat_d0(21 downto 0);
          ch_6_cnt_reserved_reg <= wr_dat_d0(31 downto 22);
        end if;
        ch_6_cnt_wack <= ch_6_cnt_wreq;
      end if;
    end if;
  end process;

  -- Register ch_7_sta

  -- Register ch_7_ctl
  rtmlamp_ohwr_ch_regs_o(7).ctl_amp_en <= ch_7_ctl_amp_en_reg;
  rtmlamp_ohwr_ch_regs_o(7).ctl_mode <= ch_7_ctl_mode_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_7_ctl_amp_en_reg <= '0';
        ch_7_ctl_mode_reg <= "000";
        ch_7_ctl_wack <= '0';
      else
        if ch_7_ctl_wreq = '1' then
          ch_7_ctl_amp_en_reg <= wr_dat_d0(0);
          ch_7_ctl_mode_reg <= wr_dat_d0(3 downto 1);
        end if;
        ch_7_ctl_wack <= ch_7_ctl_wreq;
      end if;
    end if;
  end process;

  -- Register ch_7_pi_kp
  rtmlamp_ohwr_ch_regs_o(7).pi_kp_data <= ch_7_pi_kp_data_reg;
  rtmlamp_ohwr_ch_regs_o(7).pi_kp_reserved <= ch_7_pi_kp_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_7_pi_kp_data_reg <= "00000000000000000000000000";
        ch_7_pi_kp_reserved_reg <= "000000";
        ch_7_pi_kp_wack <= '0';
      else
        if ch_7_pi_kp_wreq = '1' then
          ch_7_pi_kp_data_reg <= wr_dat_d0(25 downto 0);
          ch_7_pi_kp_reserved_reg <= wr_dat_d0(31 downto 26);
        end if;
        ch_7_pi_kp_wack <= ch_7_pi_kp_wreq;
      end if;
    end if;
  end process;

  -- Register ch_7_pi_ti
  rtmlamp_ohwr_ch_regs_o(7).pi_ti_data <= ch_7_pi_ti_data_reg;
  rtmlamp_ohwr_ch_regs_o(7).pi_ti_reserved <= ch_7_pi_ti_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_7_pi_ti_data_reg <= "00000000000000000000000000";
        ch_7_pi_ti_reserved_reg <= "000000";
        ch_7_pi_ti_wack <= '0';
      else
        if ch_7_pi_ti_wreq = '1' then
          ch_7_pi_ti_data_reg <= wr_dat_d0(25 downto 0);
          ch_7_pi_ti_reserved_reg <= wr_dat_d0(31 downto 26);
        end if;
        ch_7_pi_ti_wack <= ch_7_pi_ti_wreq;
      end if;
    end if;
  end process;

  -- Register ch_7_pi_sp
  rtmlamp_ohwr_ch_regs_o(7).pi_sp_data <= ch_7_pi_sp_data_reg;
  rtmlamp_ohwr_ch_regs_o(7).pi_sp_reserved <= ch_7_pi_sp_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_7_pi_sp_data_reg <= "0000000000000000";
        ch_7_pi_sp_reserved_reg <= "0000000000000000";
        ch_7_pi_sp_wack <= '0';
      else
        if ch_7_pi_sp_wreq = '1' then
          ch_7_pi_sp_data_reg <= wr_dat_d0(15 downto 0);
          ch_7_pi_sp_reserved_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_7_pi_sp_wack <= ch_7_pi_sp_wreq;
      end if;
    end if;
  end process;

  -- Register ch_7_dac
  rtmlamp_ohwr_ch_regs_o(7).dac_data <= ch_7_dac_data_reg;
  rtmlamp_ohwr_ch_regs_o(7).dac_reserved <= ch_7_dac_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_7_dac_data_reg <= "0000000000000000";
        ch_7_dac_reserved_reg <= "0000000000000000";
        ch_7_dac_wack <= '0';
      else
        if ch_7_dac_wreq = '1' then
          ch_7_dac_data_reg <= wr_dat_d0(15 downto 0);
          ch_7_dac_reserved_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_7_dac_wack <= ch_7_dac_wreq;
      end if;
    end if;
  end process;

  -- Register ch_7_lim
  rtmlamp_ohwr_ch_regs_o(7).lim_a <= ch_7_lim_a_reg;
  rtmlamp_ohwr_ch_regs_o(7).lim_b <= ch_7_lim_b_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_7_lim_a_reg <= "0000000000000000";
        ch_7_lim_b_reg <= "0000000000000000";
        ch_7_lim_wack <= '0';
      else
        if ch_7_lim_wreq = '1' then
          ch_7_lim_a_reg <= wr_dat_d0(15 downto 0);
          ch_7_lim_b_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_7_lim_wack <= ch_7_lim_wreq;
      end if;
    end if;
  end process;

  -- Register ch_7_cnt
  rtmlamp_ohwr_ch_regs_o(7).cnt_data <= ch_7_cnt_data_reg;
  rtmlamp_ohwr_ch_regs_o(7).cnt_reserved <= ch_7_cnt_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_7_cnt_data_reg <= "0000000000000000000000";
        ch_7_cnt_reserved_reg <= "0000000000";
        ch_7_cnt_wack <= '0';
      else
        if ch_7_cnt_wreq = '1' then
          ch_7_cnt_data_reg <= wr_dat_d0(21 downto 0);
          ch_7_cnt_reserved_reg <= wr_dat_d0(31 downto 22);
        end if;
        ch_7_cnt_wack <= ch_7_cnt_wreq;
      end if;
    end if;
  end process;

  -- Register ch_8_sta

  -- Register ch_8_ctl
  rtmlamp_ohwr_ch_regs_o(8).ctl_amp_en <= ch_8_ctl_amp_en_reg;
  rtmlamp_ohwr_ch_regs_o(8).ctl_mode <= ch_8_ctl_mode_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_8_ctl_amp_en_reg <= '0';
        ch_8_ctl_mode_reg <= "000";
        ch_8_ctl_wack <= '0';
      else
        if ch_8_ctl_wreq = '1' then
          ch_8_ctl_amp_en_reg <= wr_dat_d0(0);
          ch_8_ctl_mode_reg <= wr_dat_d0(3 downto 1);
        end if;
        ch_8_ctl_wack <= ch_8_ctl_wreq;
      end if;
    end if;
  end process;

  -- Register ch_8_pi_kp
  rtmlamp_ohwr_ch_regs_o(8).pi_kp_data <= ch_8_pi_kp_data_reg;
  rtmlamp_ohwr_ch_regs_o(8).pi_kp_reserved <= ch_8_pi_kp_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_8_pi_kp_data_reg <= "00000000000000000000000000";
        ch_8_pi_kp_reserved_reg <= "000000";
        ch_8_pi_kp_wack <= '0';
      else
        if ch_8_pi_kp_wreq = '1' then
          ch_8_pi_kp_data_reg <= wr_dat_d0(25 downto 0);
          ch_8_pi_kp_reserved_reg <= wr_dat_d0(31 downto 26);
        end if;
        ch_8_pi_kp_wack <= ch_8_pi_kp_wreq;
      end if;
    end if;
  end process;

  -- Register ch_8_pi_ti
  rtmlamp_ohwr_ch_regs_o(8).pi_ti_data <= ch_8_pi_ti_data_reg;
  rtmlamp_ohwr_ch_regs_o(8).pi_ti_reserved <= ch_8_pi_ti_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_8_pi_ti_data_reg <= "00000000000000000000000000";
        ch_8_pi_ti_reserved_reg <= "000000";
        ch_8_pi_ti_wack <= '0';
      else
        if ch_8_pi_ti_wreq = '1' then
          ch_8_pi_ti_data_reg <= wr_dat_d0(25 downto 0);
          ch_8_pi_ti_reserved_reg <= wr_dat_d0(31 downto 26);
        end if;
        ch_8_pi_ti_wack <= ch_8_pi_ti_wreq;
      end if;
    end if;
  end process;

  -- Register ch_8_pi_sp
  rtmlamp_ohwr_ch_regs_o(8).pi_sp_data <= ch_8_pi_sp_data_reg;
  rtmlamp_ohwr_ch_regs_o(8).pi_sp_reserved <= ch_8_pi_sp_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_8_pi_sp_data_reg <= "0000000000000000";
        ch_8_pi_sp_reserved_reg <= "0000000000000000";
        ch_8_pi_sp_wack <= '0';
      else
        if ch_8_pi_sp_wreq = '1' then
          ch_8_pi_sp_data_reg <= wr_dat_d0(15 downto 0);
          ch_8_pi_sp_reserved_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_8_pi_sp_wack <= ch_8_pi_sp_wreq;
      end if;
    end if;
  end process;

  -- Register ch_8_dac
  rtmlamp_ohwr_ch_regs_o(8).dac_data <= ch_8_dac_data_reg;
  rtmlamp_ohwr_ch_regs_o(8).dac_reserved <= ch_8_dac_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_8_dac_data_reg <= "0000000000000000";
        ch_8_dac_reserved_reg <= "0000000000000000";
        ch_8_dac_wack <= '0';
      else
        if ch_8_dac_wreq = '1' then
          ch_8_dac_data_reg <= wr_dat_d0(15 downto 0);
          ch_8_dac_reserved_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_8_dac_wack <= ch_8_dac_wreq;
      end if;
    end if;
  end process;

  -- Register ch_8_lim
  rtmlamp_ohwr_ch_regs_o(8).lim_a <= ch_8_lim_a_reg;
  rtmlamp_ohwr_ch_regs_o(8).lim_b <= ch_8_lim_b_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_8_lim_a_reg <= "0000000000000000";
        ch_8_lim_b_reg <= "0000000000000000";
        ch_8_lim_wack <= '0';
      else
        if ch_8_lim_wreq = '1' then
          ch_8_lim_a_reg <= wr_dat_d0(15 downto 0);
          ch_8_lim_b_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_8_lim_wack <= ch_8_lim_wreq;
      end if;
    end if;
  end process;

  -- Register ch_8_cnt
  rtmlamp_ohwr_ch_regs_o(8).cnt_data <= ch_8_cnt_data_reg;
  rtmlamp_ohwr_ch_regs_o(8).cnt_reserved <= ch_8_cnt_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_8_cnt_data_reg <= "0000000000000000000000";
        ch_8_cnt_reserved_reg <= "0000000000";
        ch_8_cnt_wack <= '0';
      else
        if ch_8_cnt_wreq = '1' then
          ch_8_cnt_data_reg <= wr_dat_d0(21 downto 0);
          ch_8_cnt_reserved_reg <= wr_dat_d0(31 downto 22);
        end if;
        ch_8_cnt_wack <= ch_8_cnt_wreq;
      end if;
    end if;
  end process;

  -- Register ch_9_sta

  -- Register ch_9_ctl
  rtmlamp_ohwr_ch_regs_o(9).ctl_amp_en <= ch_9_ctl_amp_en_reg;
  rtmlamp_ohwr_ch_regs_o(9).ctl_mode <= ch_9_ctl_mode_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_9_ctl_amp_en_reg <= '0';
        ch_9_ctl_mode_reg <= "000";
        ch_9_ctl_wack <= '0';
      else
        if ch_9_ctl_wreq = '1' then
          ch_9_ctl_amp_en_reg <= wr_dat_d0(0);
          ch_9_ctl_mode_reg <= wr_dat_d0(3 downto 1);
        end if;
        ch_9_ctl_wack <= ch_9_ctl_wreq;
      end if;
    end if;
  end process;

  -- Register ch_9_pi_kp
  rtmlamp_ohwr_ch_regs_o(9).pi_kp_data <= ch_9_pi_kp_data_reg;
  rtmlamp_ohwr_ch_regs_o(9).pi_kp_reserved <= ch_9_pi_kp_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_9_pi_kp_data_reg <= "00000000000000000000000000";
        ch_9_pi_kp_reserved_reg <= "000000";
        ch_9_pi_kp_wack <= '0';
      else
        if ch_9_pi_kp_wreq = '1' then
          ch_9_pi_kp_data_reg <= wr_dat_d0(25 downto 0);
          ch_9_pi_kp_reserved_reg <= wr_dat_d0(31 downto 26);
        end if;
        ch_9_pi_kp_wack <= ch_9_pi_kp_wreq;
      end if;
    end if;
  end process;

  -- Register ch_9_pi_ti
  rtmlamp_ohwr_ch_regs_o(9).pi_ti_data <= ch_9_pi_ti_data_reg;
  rtmlamp_ohwr_ch_regs_o(9).pi_ti_reserved <= ch_9_pi_ti_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_9_pi_ti_data_reg <= "00000000000000000000000000";
        ch_9_pi_ti_reserved_reg <= "000000";
        ch_9_pi_ti_wack <= '0';
      else
        if ch_9_pi_ti_wreq = '1' then
          ch_9_pi_ti_data_reg <= wr_dat_d0(25 downto 0);
          ch_9_pi_ti_reserved_reg <= wr_dat_d0(31 downto 26);
        end if;
        ch_9_pi_ti_wack <= ch_9_pi_ti_wreq;
      end if;
    end if;
  end process;

  -- Register ch_9_pi_sp
  rtmlamp_ohwr_ch_regs_o(9).pi_sp_data <= ch_9_pi_sp_data_reg;
  rtmlamp_ohwr_ch_regs_o(9).pi_sp_reserved <= ch_9_pi_sp_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_9_pi_sp_data_reg <= "0000000000000000";
        ch_9_pi_sp_reserved_reg <= "0000000000000000";
        ch_9_pi_sp_wack <= '0';
      else
        if ch_9_pi_sp_wreq = '1' then
          ch_9_pi_sp_data_reg <= wr_dat_d0(15 downto 0);
          ch_9_pi_sp_reserved_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_9_pi_sp_wack <= ch_9_pi_sp_wreq;
      end if;
    end if;
  end process;

  -- Register ch_9_dac
  rtmlamp_ohwr_ch_regs_o(9).dac_data <= ch_9_dac_data_reg;
  rtmlamp_ohwr_ch_regs_o(9).dac_reserved <= ch_9_dac_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_9_dac_data_reg <= "0000000000000000";
        ch_9_dac_reserved_reg <= "0000000000000000";
        ch_9_dac_wack <= '0';
      else
        if ch_9_dac_wreq = '1' then
          ch_9_dac_data_reg <= wr_dat_d0(15 downto 0);
          ch_9_dac_reserved_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_9_dac_wack <= ch_9_dac_wreq;
      end if;
    end if;
  end process;

  -- Register ch_9_lim
  rtmlamp_ohwr_ch_regs_o(9).lim_a <= ch_9_lim_a_reg;
  rtmlamp_ohwr_ch_regs_o(9).lim_b <= ch_9_lim_b_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_9_lim_a_reg <= "0000000000000000";
        ch_9_lim_b_reg <= "0000000000000000";
        ch_9_lim_wack <= '0';
      else
        if ch_9_lim_wreq = '1' then
          ch_9_lim_a_reg <= wr_dat_d0(15 downto 0);
          ch_9_lim_b_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_9_lim_wack <= ch_9_lim_wreq;
      end if;
    end if;
  end process;

  -- Register ch_9_cnt
  rtmlamp_ohwr_ch_regs_o(9).cnt_data <= ch_9_cnt_data_reg;
  rtmlamp_ohwr_ch_regs_o(9).cnt_reserved <= ch_9_cnt_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_9_cnt_data_reg <= "0000000000000000000000";
        ch_9_cnt_reserved_reg <= "0000000000";
        ch_9_cnt_wack <= '0';
      else
        if ch_9_cnt_wreq = '1' then
          ch_9_cnt_data_reg <= wr_dat_d0(21 downto 0);
          ch_9_cnt_reserved_reg <= wr_dat_d0(31 downto 22);
        end if;
        ch_9_cnt_wack <= ch_9_cnt_wreq;
      end if;
    end if;
  end process;

  -- Register ch_10_sta

  -- Register ch_10_ctl
  rtmlamp_ohwr_ch_regs_o(10).ctl_amp_en <= ch_10_ctl_amp_en_reg;
  rtmlamp_ohwr_ch_regs_o(10).ctl_mode <= ch_10_ctl_mode_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_10_ctl_amp_en_reg <= '0';
        ch_10_ctl_mode_reg <= "000";
        ch_10_ctl_wack <= '0';
      else
        if ch_10_ctl_wreq = '1' then
          ch_10_ctl_amp_en_reg <= wr_dat_d0(0);
          ch_10_ctl_mode_reg <= wr_dat_d0(3 downto 1);
        end if;
        ch_10_ctl_wack <= ch_10_ctl_wreq;
      end if;
    end if;
  end process;

  -- Register ch_10_pi_kp
  rtmlamp_ohwr_ch_regs_o(10).pi_kp_data <= ch_10_pi_kp_data_reg;
  rtmlamp_ohwr_ch_regs_o(10).pi_kp_reserved <= ch_10_pi_kp_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_10_pi_kp_data_reg <= "00000000000000000000000000";
        ch_10_pi_kp_reserved_reg <= "000000";
        ch_10_pi_kp_wack <= '0';
      else
        if ch_10_pi_kp_wreq = '1' then
          ch_10_pi_kp_data_reg <= wr_dat_d0(25 downto 0);
          ch_10_pi_kp_reserved_reg <= wr_dat_d0(31 downto 26);
        end if;
        ch_10_pi_kp_wack <= ch_10_pi_kp_wreq;
      end if;
    end if;
  end process;

  -- Register ch_10_pi_ti
  rtmlamp_ohwr_ch_regs_o(10).pi_ti_data <= ch_10_pi_ti_data_reg;
  rtmlamp_ohwr_ch_regs_o(10).pi_ti_reserved <= ch_10_pi_ti_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_10_pi_ti_data_reg <= "00000000000000000000000000";
        ch_10_pi_ti_reserved_reg <= "000000";
        ch_10_pi_ti_wack <= '0';
      else
        if ch_10_pi_ti_wreq = '1' then
          ch_10_pi_ti_data_reg <= wr_dat_d0(25 downto 0);
          ch_10_pi_ti_reserved_reg <= wr_dat_d0(31 downto 26);
        end if;
        ch_10_pi_ti_wack <= ch_10_pi_ti_wreq;
      end if;
    end if;
  end process;

  -- Register ch_10_pi_sp
  rtmlamp_ohwr_ch_regs_o(10).pi_sp_data <= ch_10_pi_sp_data_reg;
  rtmlamp_ohwr_ch_regs_o(10).pi_sp_reserved <= ch_10_pi_sp_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_10_pi_sp_data_reg <= "0000000000000000";
        ch_10_pi_sp_reserved_reg <= "0000000000000000";
        ch_10_pi_sp_wack <= '0';
      else
        if ch_10_pi_sp_wreq = '1' then
          ch_10_pi_sp_data_reg <= wr_dat_d0(15 downto 0);
          ch_10_pi_sp_reserved_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_10_pi_sp_wack <= ch_10_pi_sp_wreq;
      end if;
    end if;
  end process;

  -- Register ch_10_dac
  rtmlamp_ohwr_ch_regs_o(10).dac_data <= ch_10_dac_data_reg;
  rtmlamp_ohwr_ch_regs_o(10).dac_reserved <= ch_10_dac_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_10_dac_data_reg <= "0000000000000000";
        ch_10_dac_reserved_reg <= "0000000000000000";
        ch_10_dac_wack <= '0';
      else
        if ch_10_dac_wreq = '1' then
          ch_10_dac_data_reg <= wr_dat_d0(15 downto 0);
          ch_10_dac_reserved_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_10_dac_wack <= ch_10_dac_wreq;
      end if;
    end if;
  end process;

  -- Register ch_10_lim
  rtmlamp_ohwr_ch_regs_o(10).lim_a <= ch_10_lim_a_reg;
  rtmlamp_ohwr_ch_regs_o(10).lim_b <= ch_10_lim_b_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_10_lim_a_reg <= "0000000000000000";
        ch_10_lim_b_reg <= "0000000000000000";
        ch_10_lim_wack <= '0';
      else
        if ch_10_lim_wreq = '1' then
          ch_10_lim_a_reg <= wr_dat_d0(15 downto 0);
          ch_10_lim_b_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_10_lim_wack <= ch_10_lim_wreq;
      end if;
    end if;
  end process;

  -- Register ch_10_cnt
  rtmlamp_ohwr_ch_regs_o(10).cnt_data <= ch_10_cnt_data_reg;
  rtmlamp_ohwr_ch_regs_o(10).cnt_reserved <= ch_10_cnt_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_10_cnt_data_reg <= "0000000000000000000000";
        ch_10_cnt_reserved_reg <= "0000000000";
        ch_10_cnt_wack <= '0';
      else
        if ch_10_cnt_wreq = '1' then
          ch_10_cnt_data_reg <= wr_dat_d0(21 downto 0);
          ch_10_cnt_reserved_reg <= wr_dat_d0(31 downto 22);
        end if;
        ch_10_cnt_wack <= ch_10_cnt_wreq;
      end if;
    end if;
  end process;

  -- Register ch_11_sta

  -- Register ch_11_ctl
  rtmlamp_ohwr_ch_regs_o(11).ctl_amp_en <= ch_11_ctl_amp_en_reg;
  rtmlamp_ohwr_ch_regs_o(11).ctl_mode <= ch_11_ctl_mode_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_11_ctl_amp_en_reg <= '0';
        ch_11_ctl_mode_reg <= "000";
        ch_11_ctl_wack <= '0';
      else
        if ch_11_ctl_wreq = '1' then
          ch_11_ctl_amp_en_reg <= wr_dat_d0(0);
          ch_11_ctl_mode_reg <= wr_dat_d0(3 downto 1);
        end if;
        ch_11_ctl_wack <= ch_11_ctl_wreq;
      end if;
    end if;
  end process;

  -- Register ch_11_pi_kp
  rtmlamp_ohwr_ch_regs_o(11).pi_kp_data <= ch_11_pi_kp_data_reg;
  rtmlamp_ohwr_ch_regs_o(11).pi_kp_reserved <= ch_11_pi_kp_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_11_pi_kp_data_reg <= "00000000000000000000000000";
        ch_11_pi_kp_reserved_reg <= "000000";
        ch_11_pi_kp_wack <= '0';
      else
        if ch_11_pi_kp_wreq = '1' then
          ch_11_pi_kp_data_reg <= wr_dat_d0(25 downto 0);
          ch_11_pi_kp_reserved_reg <= wr_dat_d0(31 downto 26);
        end if;
        ch_11_pi_kp_wack <= ch_11_pi_kp_wreq;
      end if;
    end if;
  end process;

  -- Register ch_11_pi_ti
  rtmlamp_ohwr_ch_regs_o(11).pi_ti_data <= ch_11_pi_ti_data_reg;
  rtmlamp_ohwr_ch_regs_o(11).pi_ti_reserved <= ch_11_pi_ti_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_11_pi_ti_data_reg <= "00000000000000000000000000";
        ch_11_pi_ti_reserved_reg <= "000000";
        ch_11_pi_ti_wack <= '0';
      else
        if ch_11_pi_ti_wreq = '1' then
          ch_11_pi_ti_data_reg <= wr_dat_d0(25 downto 0);
          ch_11_pi_ti_reserved_reg <= wr_dat_d0(31 downto 26);
        end if;
        ch_11_pi_ti_wack <= ch_11_pi_ti_wreq;
      end if;
    end if;
  end process;

  -- Register ch_11_pi_sp
  rtmlamp_ohwr_ch_regs_o(11).pi_sp_data <= ch_11_pi_sp_data_reg;
  rtmlamp_ohwr_ch_regs_o(11).pi_sp_reserved <= ch_11_pi_sp_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_11_pi_sp_data_reg <= "0000000000000000";
        ch_11_pi_sp_reserved_reg <= "0000000000000000";
        ch_11_pi_sp_wack <= '0';
      else
        if ch_11_pi_sp_wreq = '1' then
          ch_11_pi_sp_data_reg <= wr_dat_d0(15 downto 0);
          ch_11_pi_sp_reserved_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_11_pi_sp_wack <= ch_11_pi_sp_wreq;
      end if;
    end if;
  end process;

  -- Register ch_11_dac
  rtmlamp_ohwr_ch_regs_o(11).dac_data <= ch_11_dac_data_reg;
  rtmlamp_ohwr_ch_regs_o(11).dac_reserved <= ch_11_dac_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_11_dac_data_reg <= "0000000000000000";
        ch_11_dac_reserved_reg <= "0000000000000000";
        ch_11_dac_wack <= '0';
      else
        if ch_11_dac_wreq = '1' then
          ch_11_dac_data_reg <= wr_dat_d0(15 downto 0);
          ch_11_dac_reserved_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_11_dac_wack <= ch_11_dac_wreq;
      end if;
    end if;
  end process;

  -- Register ch_11_lim
  rtmlamp_ohwr_ch_regs_o(11).lim_a <= ch_11_lim_a_reg;
  rtmlamp_ohwr_ch_regs_o(11).lim_b <= ch_11_lim_b_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_11_lim_a_reg <= "0000000000000000";
        ch_11_lim_b_reg <= "0000000000000000";
        ch_11_lim_wack <= '0';
      else
        if ch_11_lim_wreq = '1' then
          ch_11_lim_a_reg <= wr_dat_d0(15 downto 0);
          ch_11_lim_b_reg <= wr_dat_d0(31 downto 16);
        end if;
        ch_11_lim_wack <= ch_11_lim_wreq;
      end if;
    end if;
  end process;

  -- Register ch_11_cnt
  rtmlamp_ohwr_ch_regs_o(11).cnt_data <= ch_11_cnt_data_reg;
  rtmlamp_ohwr_ch_regs_o(11).cnt_reserved <= ch_11_cnt_reserved_reg;
  process (clk_i) begin
    if rising_edge(clk_i) then
      if rst_n_i = '0' then
        ch_11_cnt_data_reg <= "0000000000000000000000";
        ch_11_cnt_reserved_reg <= "0000000000";
        ch_11_cnt_wack <= '0';
      else
        if ch_11_cnt_wreq = '1' then
          ch_11_cnt_data_reg <= wr_dat_d0(21 downto 0);
          ch_11_cnt_reserved_reg <= wr_dat_d0(31 downto 22);
        end if;
        ch_11_cnt_wack <= ch_11_cnt_wreq;
      end if;
    end if;
  end process;

  -- Process for write requests.
  process (wr_adr_d0, wr_req_d0, ctl_wack, ch_0_ctl_wack, ch_0_pi_kp_wack,
           ch_0_pi_ti_wack, ch_0_pi_sp_wack, ch_0_dac_wack, ch_0_lim_wack,
           ch_0_cnt_wack, ch_1_ctl_wack, ch_1_pi_kp_wack, ch_1_pi_ti_wack,
           ch_1_pi_sp_wack, ch_1_dac_wack, ch_1_lim_wack, ch_1_cnt_wack,
           ch_2_ctl_wack, ch_2_pi_kp_wack, ch_2_pi_ti_wack, ch_2_pi_sp_wack,
           ch_2_dac_wack, ch_2_lim_wack, ch_2_cnt_wack, ch_3_ctl_wack,
           ch_3_pi_kp_wack, ch_3_pi_ti_wack, ch_3_pi_sp_wack, ch_3_dac_wack,
           ch_3_lim_wack, ch_3_cnt_wack, ch_4_ctl_wack, ch_4_pi_kp_wack,
           ch_4_pi_ti_wack, ch_4_pi_sp_wack, ch_4_dac_wack, ch_4_lim_wack,
           ch_4_cnt_wack, ch_5_ctl_wack, ch_5_pi_kp_wack, ch_5_pi_ti_wack,
           ch_5_pi_sp_wack, ch_5_dac_wack, ch_5_lim_wack, ch_5_cnt_wack,
           ch_6_ctl_wack, ch_6_pi_kp_wack, ch_6_pi_ti_wack, ch_6_pi_sp_wack,
           ch_6_dac_wack, ch_6_lim_wack, ch_6_cnt_wack, ch_7_ctl_wack,
           ch_7_pi_kp_wack, ch_7_pi_ti_wack, ch_7_pi_sp_wack, ch_7_dac_wack,
           ch_7_lim_wack, ch_7_cnt_wack, ch_8_ctl_wack, ch_8_pi_kp_wack,
           ch_8_pi_ti_wack, ch_8_pi_sp_wack, ch_8_dac_wack, ch_8_lim_wack,
           ch_8_cnt_wack, ch_9_ctl_wack, ch_9_pi_kp_wack, ch_9_pi_ti_wack,
           ch_9_pi_sp_wack, ch_9_dac_wack, ch_9_lim_wack, ch_9_cnt_wack,
           ch_10_ctl_wack, ch_10_pi_kp_wack, ch_10_pi_ti_wack, ch_10_pi_sp_wack,
           ch_10_dac_wack, ch_10_lim_wack, ch_10_cnt_wack, ch_11_ctl_wack,
           ch_11_pi_kp_wack, ch_11_pi_ti_wack, ch_11_pi_sp_wack, ch_11_dac_wack,
           ch_11_lim_wack, ch_11_cnt_wack) begin
    ctl_wreq <= '0';
    ch_0_ctl_wreq <= '0';
    ch_0_pi_kp_wreq <= '0';
    ch_0_pi_ti_wreq <= '0';
    ch_0_pi_sp_wreq <= '0';
    ch_0_dac_wreq <= '0';
    ch_0_lim_wreq <= '0';
    ch_0_cnt_wreq <= '0';
    ch_1_ctl_wreq <= '0';
    ch_1_pi_kp_wreq <= '0';
    ch_1_pi_ti_wreq <= '0';
    ch_1_pi_sp_wreq <= '0';
    ch_1_dac_wreq <= '0';
    ch_1_lim_wreq <= '0';
    ch_1_cnt_wreq <= '0';
    ch_2_ctl_wreq <= '0';
    ch_2_pi_kp_wreq <= '0';
    ch_2_pi_ti_wreq <= '0';
    ch_2_pi_sp_wreq <= '0';
    ch_2_dac_wreq <= '0';
    ch_2_lim_wreq <= '0';
    ch_2_cnt_wreq <= '0';
    ch_3_ctl_wreq <= '0';
    ch_3_pi_kp_wreq <= '0';
    ch_3_pi_ti_wreq <= '0';
    ch_3_pi_sp_wreq <= '0';
    ch_3_dac_wreq <= '0';
    ch_3_lim_wreq <= '0';
    ch_3_cnt_wreq <= '0';
    ch_4_ctl_wreq <= '0';
    ch_4_pi_kp_wreq <= '0';
    ch_4_pi_ti_wreq <= '0';
    ch_4_pi_sp_wreq <= '0';
    ch_4_dac_wreq <= '0';
    ch_4_lim_wreq <= '0';
    ch_4_cnt_wreq <= '0';
    ch_5_ctl_wreq <= '0';
    ch_5_pi_kp_wreq <= '0';
    ch_5_pi_ti_wreq <= '0';
    ch_5_pi_sp_wreq <= '0';
    ch_5_dac_wreq <= '0';
    ch_5_lim_wreq <= '0';
    ch_5_cnt_wreq <= '0';
    ch_6_ctl_wreq <= '0';
    ch_6_pi_kp_wreq <= '0';
    ch_6_pi_ti_wreq <= '0';
    ch_6_pi_sp_wreq <= '0';
    ch_6_dac_wreq <= '0';
    ch_6_lim_wreq <= '0';
    ch_6_cnt_wreq <= '0';
    ch_7_ctl_wreq <= '0';
    ch_7_pi_kp_wreq <= '0';
    ch_7_pi_ti_wreq <= '0';
    ch_7_pi_sp_wreq <= '0';
    ch_7_dac_wreq <= '0';
    ch_7_lim_wreq <= '0';
    ch_7_cnt_wreq <= '0';
    ch_8_ctl_wreq <= '0';
    ch_8_pi_kp_wreq <= '0';
    ch_8_pi_ti_wreq <= '0';
    ch_8_pi_sp_wreq <= '0';
    ch_8_dac_wreq <= '0';
    ch_8_lim_wreq <= '0';
    ch_8_cnt_wreq <= '0';
    ch_9_ctl_wreq <= '0';
    ch_9_pi_kp_wreq <= '0';
    ch_9_pi_ti_wreq <= '0';
    ch_9_pi_sp_wreq <= '0';
    ch_9_dac_wreq <= '0';
    ch_9_lim_wreq <= '0';
    ch_9_cnt_wreq <= '0';
    ch_10_ctl_wreq <= '0';
    ch_10_pi_kp_wreq <= '0';
    ch_10_pi_ti_wreq <= '0';
    ch_10_pi_sp_wreq <= '0';
    ch_10_dac_wreq <= '0';
    ch_10_lim_wreq <= '0';
    ch_10_cnt_wreq <= '0';
    ch_11_ctl_wreq <= '0';
    ch_11_pi_kp_wreq <= '0';
    ch_11_pi_ti_wreq <= '0';
    ch_11_pi_sp_wreq <= '0';
    ch_11_dac_wreq <= '0';
    ch_11_lim_wreq <= '0';
    ch_11_cnt_wreq <= '0';
    case wr_adr_d0(10 downto 2) is
    when "000000000" =>
      -- Reg sta
      wr_ack_int <= wr_req_d0;
    when "000000001" =>
      -- Reg ctl
      ctl_wreq <= wr_req_d0;
      wr_ack_int <= ctl_wack;
    when "100000000" =>
      -- Reg ch_0_sta
      wr_ack_int <= wr_req_d0;
    when "100000001" =>
      -- Reg ch_0_ctl
      ch_0_ctl_wreq <= wr_req_d0;
      wr_ack_int <= ch_0_ctl_wack;
    when "100000010" =>
      -- Reg ch_0_pi_kp
      ch_0_pi_kp_wreq <= wr_req_d0;
      wr_ack_int <= ch_0_pi_kp_wack;
    when "100000011" =>
      -- Reg ch_0_pi_ti
      ch_0_pi_ti_wreq <= wr_req_d0;
      wr_ack_int <= ch_0_pi_ti_wack;
    when "100000100" =>
      -- Reg ch_0_pi_sp
      ch_0_pi_sp_wreq <= wr_req_d0;
      wr_ack_int <= ch_0_pi_sp_wack;
    when "100000101" =>
      -- Reg ch_0_dac
      ch_0_dac_wreq <= wr_req_d0;
      wr_ack_int <= ch_0_dac_wack;
    when "100000110" =>
      -- Reg ch_0_lim
      ch_0_lim_wreq <= wr_req_d0;
      wr_ack_int <= ch_0_lim_wack;
    when "100000111" =>
      -- Reg ch_0_cnt
      ch_0_cnt_wreq <= wr_req_d0;
      wr_ack_int <= ch_0_cnt_wack;
    when "100010000" =>
      -- Reg ch_1_sta
      wr_ack_int <= wr_req_d0;
    when "100010001" =>
      -- Reg ch_1_ctl
      ch_1_ctl_wreq <= wr_req_d0;
      wr_ack_int <= ch_1_ctl_wack;
    when "100010010" =>
      -- Reg ch_1_pi_kp
      ch_1_pi_kp_wreq <= wr_req_d0;
      wr_ack_int <= ch_1_pi_kp_wack;
    when "100010011" =>
      -- Reg ch_1_pi_ti
      ch_1_pi_ti_wreq <= wr_req_d0;
      wr_ack_int <= ch_1_pi_ti_wack;
    when "100010100" =>
      -- Reg ch_1_pi_sp
      ch_1_pi_sp_wreq <= wr_req_d0;
      wr_ack_int <= ch_1_pi_sp_wack;
    when "100010101" =>
      -- Reg ch_1_dac
      ch_1_dac_wreq <= wr_req_d0;
      wr_ack_int <= ch_1_dac_wack;
    when "100010110" =>
      -- Reg ch_1_lim
      ch_1_lim_wreq <= wr_req_d0;
      wr_ack_int <= ch_1_lim_wack;
    when "100010111" =>
      -- Reg ch_1_cnt
      ch_1_cnt_wreq <= wr_req_d0;
      wr_ack_int <= ch_1_cnt_wack;
    when "100100000" =>
      -- Reg ch_2_sta
      wr_ack_int <= wr_req_d0;
    when "100100001" =>
      -- Reg ch_2_ctl
      ch_2_ctl_wreq <= wr_req_d0;
      wr_ack_int <= ch_2_ctl_wack;
    when "100100010" =>
      -- Reg ch_2_pi_kp
      ch_2_pi_kp_wreq <= wr_req_d0;
      wr_ack_int <= ch_2_pi_kp_wack;
    when "100100011" =>
      -- Reg ch_2_pi_ti
      ch_2_pi_ti_wreq <= wr_req_d0;
      wr_ack_int <= ch_2_pi_ti_wack;
    when "100100100" =>
      -- Reg ch_2_pi_sp
      ch_2_pi_sp_wreq <= wr_req_d0;
      wr_ack_int <= ch_2_pi_sp_wack;
    when "100100101" =>
      -- Reg ch_2_dac
      ch_2_dac_wreq <= wr_req_d0;
      wr_ack_int <= ch_2_dac_wack;
    when "100100110" =>
      -- Reg ch_2_lim
      ch_2_lim_wreq <= wr_req_d0;
      wr_ack_int <= ch_2_lim_wack;
    when "100100111" =>
      -- Reg ch_2_cnt
      ch_2_cnt_wreq <= wr_req_d0;
      wr_ack_int <= ch_2_cnt_wack;
    when "100110000" =>
      -- Reg ch_3_sta
      wr_ack_int <= wr_req_d0;
    when "100110001" =>
      -- Reg ch_3_ctl
      ch_3_ctl_wreq <= wr_req_d0;
      wr_ack_int <= ch_3_ctl_wack;
    when "100110010" =>
      -- Reg ch_3_pi_kp
      ch_3_pi_kp_wreq <= wr_req_d0;
      wr_ack_int <= ch_3_pi_kp_wack;
    when "100110011" =>
      -- Reg ch_3_pi_ti
      ch_3_pi_ti_wreq <= wr_req_d0;
      wr_ack_int <= ch_3_pi_ti_wack;
    when "100110100" =>
      -- Reg ch_3_pi_sp
      ch_3_pi_sp_wreq <= wr_req_d0;
      wr_ack_int <= ch_3_pi_sp_wack;
    when "100110101" =>
      -- Reg ch_3_dac
      ch_3_dac_wreq <= wr_req_d0;
      wr_ack_int <= ch_3_dac_wack;
    when "100110110" =>
      -- Reg ch_3_lim
      ch_3_lim_wreq <= wr_req_d0;
      wr_ack_int <= ch_3_lim_wack;
    when "100110111" =>
      -- Reg ch_3_cnt
      ch_3_cnt_wreq <= wr_req_d0;
      wr_ack_int <= ch_3_cnt_wack;
    when "101000000" =>
      -- Reg ch_4_sta
      wr_ack_int <= wr_req_d0;
    when "101000001" =>
      -- Reg ch_4_ctl
      ch_4_ctl_wreq <= wr_req_d0;
      wr_ack_int <= ch_4_ctl_wack;
    when "101000010" =>
      -- Reg ch_4_pi_kp
      ch_4_pi_kp_wreq <= wr_req_d0;
      wr_ack_int <= ch_4_pi_kp_wack;
    when "101000011" =>
      -- Reg ch_4_pi_ti
      ch_4_pi_ti_wreq <= wr_req_d0;
      wr_ack_int <= ch_4_pi_ti_wack;
    when "101000100" =>
      -- Reg ch_4_pi_sp
      ch_4_pi_sp_wreq <= wr_req_d0;
      wr_ack_int <= ch_4_pi_sp_wack;
    when "101000101" =>
      -- Reg ch_4_dac
      ch_4_dac_wreq <= wr_req_d0;
      wr_ack_int <= ch_4_dac_wack;
    when "101000110" =>
      -- Reg ch_4_lim
      ch_4_lim_wreq <= wr_req_d0;
      wr_ack_int <= ch_4_lim_wack;
    when "101000111" =>
      -- Reg ch_4_cnt
      ch_4_cnt_wreq <= wr_req_d0;
      wr_ack_int <= ch_4_cnt_wack;
    when "101010000" =>
      -- Reg ch_5_sta
      wr_ack_int <= wr_req_d0;
    when "101010001" =>
      -- Reg ch_5_ctl
      ch_5_ctl_wreq <= wr_req_d0;
      wr_ack_int <= ch_5_ctl_wack;
    when "101010010" =>
      -- Reg ch_5_pi_kp
      ch_5_pi_kp_wreq <= wr_req_d0;
      wr_ack_int <= ch_5_pi_kp_wack;
    when "101010011" =>
      -- Reg ch_5_pi_ti
      ch_5_pi_ti_wreq <= wr_req_d0;
      wr_ack_int <= ch_5_pi_ti_wack;
    when "101010100" =>
      -- Reg ch_5_pi_sp
      ch_5_pi_sp_wreq <= wr_req_d0;
      wr_ack_int <= ch_5_pi_sp_wack;
    when "101010101" =>
      -- Reg ch_5_dac
      ch_5_dac_wreq <= wr_req_d0;
      wr_ack_int <= ch_5_dac_wack;
    when "101010110" =>
      -- Reg ch_5_lim
      ch_5_lim_wreq <= wr_req_d0;
      wr_ack_int <= ch_5_lim_wack;
    when "101010111" =>
      -- Reg ch_5_cnt
      ch_5_cnt_wreq <= wr_req_d0;
      wr_ack_int <= ch_5_cnt_wack;
    when "101100000" =>
      -- Reg ch_6_sta
      wr_ack_int <= wr_req_d0;
    when "101100001" =>
      -- Reg ch_6_ctl
      ch_6_ctl_wreq <= wr_req_d0;
      wr_ack_int <= ch_6_ctl_wack;
    when "101100010" =>
      -- Reg ch_6_pi_kp
      ch_6_pi_kp_wreq <= wr_req_d0;
      wr_ack_int <= ch_6_pi_kp_wack;
    when "101100011" =>
      -- Reg ch_6_pi_ti
      ch_6_pi_ti_wreq <= wr_req_d0;
      wr_ack_int <= ch_6_pi_ti_wack;
    when "101100100" =>
      -- Reg ch_6_pi_sp
      ch_6_pi_sp_wreq <= wr_req_d0;
      wr_ack_int <= ch_6_pi_sp_wack;
    when "101100101" =>
      -- Reg ch_6_dac
      ch_6_dac_wreq <= wr_req_d0;
      wr_ack_int <= ch_6_dac_wack;
    when "101100110" =>
      -- Reg ch_6_lim
      ch_6_lim_wreq <= wr_req_d0;
      wr_ack_int <= ch_6_lim_wack;
    when "101100111" =>
      -- Reg ch_6_cnt
      ch_6_cnt_wreq <= wr_req_d0;
      wr_ack_int <= ch_6_cnt_wack;
    when "101110000" =>
      -- Reg ch_7_sta
      wr_ack_int <= wr_req_d0;
    when "101110001" =>
      -- Reg ch_7_ctl
      ch_7_ctl_wreq <= wr_req_d0;
      wr_ack_int <= ch_7_ctl_wack;
    when "101110010" =>
      -- Reg ch_7_pi_kp
      ch_7_pi_kp_wreq <= wr_req_d0;
      wr_ack_int <= ch_7_pi_kp_wack;
    when "101110011" =>
      -- Reg ch_7_pi_ti
      ch_7_pi_ti_wreq <= wr_req_d0;
      wr_ack_int <= ch_7_pi_ti_wack;
    when "101110100" =>
      -- Reg ch_7_pi_sp
      ch_7_pi_sp_wreq <= wr_req_d0;
      wr_ack_int <= ch_7_pi_sp_wack;
    when "101110101" =>
      -- Reg ch_7_dac
      ch_7_dac_wreq <= wr_req_d0;
      wr_ack_int <= ch_7_dac_wack;
    when "101110110" =>
      -- Reg ch_7_lim
      ch_7_lim_wreq <= wr_req_d0;
      wr_ack_int <= ch_7_lim_wack;
    when "101110111" =>
      -- Reg ch_7_cnt
      ch_7_cnt_wreq <= wr_req_d0;
      wr_ack_int <= ch_7_cnt_wack;
    when "110000000" =>
      -- Reg ch_8_sta
      wr_ack_int <= wr_req_d0;
    when "110000001" =>
      -- Reg ch_8_ctl
      ch_8_ctl_wreq <= wr_req_d0;
      wr_ack_int <= ch_8_ctl_wack;
    when "110000010" =>
      -- Reg ch_8_pi_kp
      ch_8_pi_kp_wreq <= wr_req_d0;
      wr_ack_int <= ch_8_pi_kp_wack;
    when "110000011" =>
      -- Reg ch_8_pi_ti
      ch_8_pi_ti_wreq <= wr_req_d0;
      wr_ack_int <= ch_8_pi_ti_wack;
    when "110000100" =>
      -- Reg ch_8_pi_sp
      ch_8_pi_sp_wreq <= wr_req_d0;
      wr_ack_int <= ch_8_pi_sp_wack;
    when "110000101" =>
      -- Reg ch_8_dac
      ch_8_dac_wreq <= wr_req_d0;
      wr_ack_int <= ch_8_dac_wack;
    when "110000110" =>
      -- Reg ch_8_lim
      ch_8_lim_wreq <= wr_req_d0;
      wr_ack_int <= ch_8_lim_wack;
    when "110000111" =>
      -- Reg ch_8_cnt
      ch_8_cnt_wreq <= wr_req_d0;
      wr_ack_int <= ch_8_cnt_wack;
    when "110010000" =>
      -- Reg ch_9_sta
      wr_ack_int <= wr_req_d0;
    when "110010001" =>
      -- Reg ch_9_ctl
      ch_9_ctl_wreq <= wr_req_d0;
      wr_ack_int <= ch_9_ctl_wack;
    when "110010010" =>
      -- Reg ch_9_pi_kp
      ch_9_pi_kp_wreq <= wr_req_d0;
      wr_ack_int <= ch_9_pi_kp_wack;
    when "110010011" =>
      -- Reg ch_9_pi_ti
      ch_9_pi_ti_wreq <= wr_req_d0;
      wr_ack_int <= ch_9_pi_ti_wack;
    when "110010100" =>
      -- Reg ch_9_pi_sp
      ch_9_pi_sp_wreq <= wr_req_d0;
      wr_ack_int <= ch_9_pi_sp_wack;
    when "110010101" =>
      -- Reg ch_9_dac
      ch_9_dac_wreq <= wr_req_d0;
      wr_ack_int <= ch_9_dac_wack;
    when "110010110" =>
      -- Reg ch_9_lim
      ch_9_lim_wreq <= wr_req_d0;
      wr_ack_int <= ch_9_lim_wack;
    when "110010111" =>
      -- Reg ch_9_cnt
      ch_9_cnt_wreq <= wr_req_d0;
      wr_ack_int <= ch_9_cnt_wack;
    when "110100000" =>
      -- Reg ch_10_sta
      wr_ack_int <= wr_req_d0;
    when "110100001" =>
      -- Reg ch_10_ctl
      ch_10_ctl_wreq <= wr_req_d0;
      wr_ack_int <= ch_10_ctl_wack;
    when "110100010" =>
      -- Reg ch_10_pi_kp
      ch_10_pi_kp_wreq <= wr_req_d0;
      wr_ack_int <= ch_10_pi_kp_wack;
    when "110100011" =>
      -- Reg ch_10_pi_ti
      ch_10_pi_ti_wreq <= wr_req_d0;
      wr_ack_int <= ch_10_pi_ti_wack;
    when "110100100" =>
      -- Reg ch_10_pi_sp
      ch_10_pi_sp_wreq <= wr_req_d0;
      wr_ack_int <= ch_10_pi_sp_wack;
    when "110100101" =>
      -- Reg ch_10_dac
      ch_10_dac_wreq <= wr_req_d0;
      wr_ack_int <= ch_10_dac_wack;
    when "110100110" =>
      -- Reg ch_10_lim
      ch_10_lim_wreq <= wr_req_d0;
      wr_ack_int <= ch_10_lim_wack;
    when "110100111" =>
      -- Reg ch_10_cnt
      ch_10_cnt_wreq <= wr_req_d0;
      wr_ack_int <= ch_10_cnt_wack;
    when "110110000" =>
      -- Reg ch_11_sta
      wr_ack_int <= wr_req_d0;
    when "110110001" =>
      -- Reg ch_11_ctl
      ch_11_ctl_wreq <= wr_req_d0;
      wr_ack_int <= ch_11_ctl_wack;
    when "110110010" =>
      -- Reg ch_11_pi_kp
      ch_11_pi_kp_wreq <= wr_req_d0;
      wr_ack_int <= ch_11_pi_kp_wack;
    when "110110011" =>
      -- Reg ch_11_pi_ti
      ch_11_pi_ti_wreq <= wr_req_d0;
      wr_ack_int <= ch_11_pi_ti_wack;
    when "110110100" =>
      -- Reg ch_11_pi_sp
      ch_11_pi_sp_wreq <= wr_req_d0;
      wr_ack_int <= ch_11_pi_sp_wack;
    when "110110101" =>
      -- Reg ch_11_dac
      ch_11_dac_wreq <= wr_req_d0;
      wr_ack_int <= ch_11_dac_wack;
    when "110110110" =>
      -- Reg ch_11_lim
      ch_11_lim_wreq <= wr_req_d0;
      wr_ack_int <= ch_11_lim_wack;
    when "110110111" =>
      -- Reg ch_11_cnt
      ch_11_cnt_wreq <= wr_req_d0;
      wr_ack_int <= ch_11_cnt_wack;
    when others =>
      wr_ack_int <= wr_req_d0;
    end case;
  end process;

  -- Process for read requests.
  process (adr_int, rd_req_int, sta_reserved_i, ctl_reserved_reg,
           rtmlamp_ohwr_ch_regs_i(0).sta_amp_iflag_l,
           rtmlamp_ohwr_ch_regs_i(0).sta_amp_tflag_l,
           rtmlamp_ohwr_ch_regs_i(0).sta_amp_iflag_r,
           rtmlamp_ohwr_ch_regs_i(0).sta_amp_tflag_r,
           rtmlamp_ohwr_ch_regs_i(0).sta_reserved, ch_0_ctl_amp_en_reg,
           ch_0_ctl_mode_reg, ch_0_pi_kp_data_reg, ch_0_pi_kp_reserved_reg,
           ch_0_pi_ti_data_reg, ch_0_pi_ti_reserved_reg, ch_0_pi_sp_data_reg,
           ch_0_pi_sp_reserved_reg, ch_0_dac_data_reg, ch_0_dac_reserved_reg,
           ch_0_lim_a_reg, ch_0_lim_b_reg, ch_0_cnt_data_reg,
           ch_0_cnt_reserved_reg, rtmlamp_ohwr_ch_regs_i(1).sta_amp_iflag_l,
           rtmlamp_ohwr_ch_regs_i(1).sta_amp_tflag_l,
           rtmlamp_ohwr_ch_regs_i(1).sta_amp_iflag_r,
           rtmlamp_ohwr_ch_regs_i(1).sta_amp_tflag_r,
           rtmlamp_ohwr_ch_regs_i(1).sta_reserved, ch_1_ctl_amp_en_reg,
           ch_1_ctl_mode_reg, ch_1_pi_kp_data_reg, ch_1_pi_kp_reserved_reg,
           ch_1_pi_ti_data_reg, ch_1_pi_ti_reserved_reg, ch_1_pi_sp_data_reg,
           ch_1_pi_sp_reserved_reg, ch_1_dac_data_reg, ch_1_dac_reserved_reg,
           ch_1_lim_a_reg, ch_1_lim_b_reg, ch_1_cnt_data_reg,
           ch_1_cnt_reserved_reg, rtmlamp_ohwr_ch_regs_i(2).sta_amp_iflag_l,
           rtmlamp_ohwr_ch_regs_i(2).sta_amp_tflag_l,
           rtmlamp_ohwr_ch_regs_i(2).sta_amp_iflag_r,
           rtmlamp_ohwr_ch_regs_i(2).sta_amp_tflag_r,
           rtmlamp_ohwr_ch_regs_i(2).sta_reserved, ch_2_ctl_amp_en_reg,
           ch_2_ctl_mode_reg, ch_2_pi_kp_data_reg, ch_2_pi_kp_reserved_reg,
           ch_2_pi_ti_data_reg, ch_2_pi_ti_reserved_reg, ch_2_pi_sp_data_reg,
           ch_2_pi_sp_reserved_reg, ch_2_dac_data_reg, ch_2_dac_reserved_reg,
           ch_2_lim_a_reg, ch_2_lim_b_reg, ch_2_cnt_data_reg,
           ch_2_cnt_reserved_reg, rtmlamp_ohwr_ch_regs_i(3).sta_amp_iflag_l,
           rtmlamp_ohwr_ch_regs_i(3).sta_amp_tflag_l,
           rtmlamp_ohwr_ch_regs_i(3).sta_amp_iflag_r,
           rtmlamp_ohwr_ch_regs_i(3).sta_amp_tflag_r,
           rtmlamp_ohwr_ch_regs_i(3).sta_reserved, ch_3_ctl_amp_en_reg,
           ch_3_ctl_mode_reg, ch_3_pi_kp_data_reg, ch_3_pi_kp_reserved_reg,
           ch_3_pi_ti_data_reg, ch_3_pi_ti_reserved_reg, ch_3_pi_sp_data_reg,
           ch_3_pi_sp_reserved_reg, ch_3_dac_data_reg, ch_3_dac_reserved_reg,
           ch_3_lim_a_reg, ch_3_lim_b_reg, ch_3_cnt_data_reg,
           ch_3_cnt_reserved_reg, rtmlamp_ohwr_ch_regs_i(4).sta_amp_iflag_l,
           rtmlamp_ohwr_ch_regs_i(4).sta_amp_tflag_l,
           rtmlamp_ohwr_ch_regs_i(4).sta_amp_iflag_r,
           rtmlamp_ohwr_ch_regs_i(4).sta_amp_tflag_r,
           rtmlamp_ohwr_ch_regs_i(4).sta_reserved, ch_4_ctl_amp_en_reg,
           ch_4_ctl_mode_reg, ch_4_pi_kp_data_reg, ch_4_pi_kp_reserved_reg,
           ch_4_pi_ti_data_reg, ch_4_pi_ti_reserved_reg, ch_4_pi_sp_data_reg,
           ch_4_pi_sp_reserved_reg, ch_4_dac_data_reg, ch_4_dac_reserved_reg,
           ch_4_lim_a_reg, ch_4_lim_b_reg, ch_4_cnt_data_reg,
           ch_4_cnt_reserved_reg, rtmlamp_ohwr_ch_regs_i(5).sta_amp_iflag_l,
           rtmlamp_ohwr_ch_regs_i(5).sta_amp_tflag_l,
           rtmlamp_ohwr_ch_regs_i(5).sta_amp_iflag_r,
           rtmlamp_ohwr_ch_regs_i(5).sta_amp_tflag_r,
           rtmlamp_ohwr_ch_regs_i(5).sta_reserved, ch_5_ctl_amp_en_reg,
           ch_5_ctl_mode_reg, ch_5_pi_kp_data_reg, ch_5_pi_kp_reserved_reg,
           ch_5_pi_ti_data_reg, ch_5_pi_ti_reserved_reg, ch_5_pi_sp_data_reg,
           ch_5_pi_sp_reserved_reg, ch_5_dac_data_reg, ch_5_dac_reserved_reg,
           ch_5_lim_a_reg, ch_5_lim_b_reg, ch_5_cnt_data_reg,
           ch_5_cnt_reserved_reg, rtmlamp_ohwr_ch_regs_i(6).sta_amp_iflag_l,
           rtmlamp_ohwr_ch_regs_i(6).sta_amp_tflag_l,
           rtmlamp_ohwr_ch_regs_i(6).sta_amp_iflag_r,
           rtmlamp_ohwr_ch_regs_i(6).sta_amp_tflag_r,
           rtmlamp_ohwr_ch_regs_i(6).sta_reserved, ch_6_ctl_amp_en_reg,
           ch_6_ctl_mode_reg, ch_6_pi_kp_data_reg, ch_6_pi_kp_reserved_reg,
           ch_6_pi_ti_data_reg, ch_6_pi_ti_reserved_reg, ch_6_pi_sp_data_reg,
           ch_6_pi_sp_reserved_reg, ch_6_dac_data_reg, ch_6_dac_reserved_reg,
           ch_6_lim_a_reg, ch_6_lim_b_reg, ch_6_cnt_data_reg,
           ch_6_cnt_reserved_reg, rtmlamp_ohwr_ch_regs_i(7).sta_amp_iflag_l,
           rtmlamp_ohwr_ch_regs_i(7).sta_amp_tflag_l,
           rtmlamp_ohwr_ch_regs_i(7).sta_amp_iflag_r,
           rtmlamp_ohwr_ch_regs_i(7).sta_amp_tflag_r,
           rtmlamp_ohwr_ch_regs_i(7).sta_reserved, ch_7_ctl_amp_en_reg,
           ch_7_ctl_mode_reg, ch_7_pi_kp_data_reg, ch_7_pi_kp_reserved_reg,
           ch_7_pi_ti_data_reg, ch_7_pi_ti_reserved_reg, ch_7_pi_sp_data_reg,
           ch_7_pi_sp_reserved_reg, ch_7_dac_data_reg, ch_7_dac_reserved_reg,
           ch_7_lim_a_reg, ch_7_lim_b_reg, ch_7_cnt_data_reg,
           ch_7_cnt_reserved_reg, rtmlamp_ohwr_ch_regs_i(8).sta_amp_iflag_l,
           rtmlamp_ohwr_ch_regs_i(8).sta_amp_tflag_l,
           rtmlamp_ohwr_ch_regs_i(8).sta_amp_iflag_r,
           rtmlamp_ohwr_ch_regs_i(8).sta_amp_tflag_r,
           rtmlamp_ohwr_ch_regs_i(8).sta_reserved, ch_8_ctl_amp_en_reg,
           ch_8_ctl_mode_reg, ch_8_pi_kp_data_reg, ch_8_pi_kp_reserved_reg,
           ch_8_pi_ti_data_reg, ch_8_pi_ti_reserved_reg, ch_8_pi_sp_data_reg,
           ch_8_pi_sp_reserved_reg, ch_8_dac_data_reg, ch_8_dac_reserved_reg,
           ch_8_lim_a_reg, ch_8_lim_b_reg, ch_8_cnt_data_reg,
           ch_8_cnt_reserved_reg, rtmlamp_ohwr_ch_regs_i(9).sta_amp_iflag_l,
           rtmlamp_ohwr_ch_regs_i(9).sta_amp_tflag_l,
           rtmlamp_ohwr_ch_regs_i(9).sta_amp_iflag_r,
           rtmlamp_ohwr_ch_regs_i(9).sta_amp_tflag_r,
           rtmlamp_ohwr_ch_regs_i(9).sta_reserved, ch_9_ctl_amp_en_reg,
           ch_9_ctl_mode_reg, ch_9_pi_kp_data_reg, ch_9_pi_kp_reserved_reg,
           ch_9_pi_ti_data_reg, ch_9_pi_ti_reserved_reg, ch_9_pi_sp_data_reg,
           ch_9_pi_sp_reserved_reg, ch_9_dac_data_reg, ch_9_dac_reserved_reg,
           ch_9_lim_a_reg, ch_9_lim_b_reg, ch_9_cnt_data_reg,
           ch_9_cnt_reserved_reg, rtmlamp_ohwr_ch_regs_i(10).sta_amp_iflag_l,
           rtmlamp_ohwr_ch_regs_i(10).sta_amp_tflag_l,
           rtmlamp_ohwr_ch_regs_i(10).sta_amp_iflag_r,
           rtmlamp_ohwr_ch_regs_i(10).sta_amp_tflag_r,
           rtmlamp_ohwr_ch_regs_i(10).sta_reserved, ch_10_ctl_amp_en_reg,
           ch_10_ctl_mode_reg, ch_10_pi_kp_data_reg, ch_10_pi_kp_reserved_reg,
           ch_10_pi_ti_data_reg, ch_10_pi_ti_reserved_reg,
           ch_10_pi_sp_data_reg, ch_10_pi_sp_reserved_reg, ch_10_dac_data_reg,
           ch_10_dac_reserved_reg, ch_10_lim_a_reg, ch_10_lim_b_reg,
           ch_10_cnt_data_reg, ch_10_cnt_reserved_reg,
           rtmlamp_ohwr_ch_regs_i(11).sta_amp_iflag_l,
           rtmlamp_ohwr_ch_regs_i(11).sta_amp_tflag_l,
           rtmlamp_ohwr_ch_regs_i(11).sta_amp_iflag_r,
           rtmlamp_ohwr_ch_regs_i(11).sta_amp_tflag_r,
           rtmlamp_ohwr_ch_regs_i(11).sta_reserved, ch_11_ctl_amp_en_reg,
           ch_11_ctl_mode_reg, ch_11_pi_kp_data_reg, ch_11_pi_kp_reserved_reg,
           ch_11_pi_ti_data_reg, ch_11_pi_ti_reserved_reg,
           ch_11_pi_sp_data_reg, ch_11_pi_sp_reserved_reg, ch_11_dac_data_reg,
           ch_11_dac_reserved_reg, ch_11_lim_a_reg, ch_11_lim_b_reg,
           ch_11_cnt_data_reg, ch_11_cnt_reserved_reg) begin
    -- By default ack read requests
    rd_dat_d0 <= (others => 'X');
    case adr_int(10 downto 2) is
    when "000000000" =>
      -- Reg sta
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0 <= sta_reserved_i;
    when "000000001" =>
      -- Reg ctl
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0 <= ctl_reserved_reg;
    when "100000000" =>
      -- Reg ch_0_sta
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(0) <= rtmlamp_ohwr_ch_regs_i(0).sta_amp_iflag_l;
      rd_dat_d0(1) <= rtmlamp_ohwr_ch_regs_i(0).sta_amp_tflag_l;
      rd_dat_d0(2) <= rtmlamp_ohwr_ch_regs_i(0).sta_amp_iflag_r;
      rd_dat_d0(3) <= rtmlamp_ohwr_ch_regs_i(0).sta_amp_tflag_r;
      rd_dat_d0(31 downto 4) <= rtmlamp_ohwr_ch_regs_i(0).sta_reserved;
    when "100000001" =>
      -- Reg ch_0_ctl
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(0) <= ch_0_ctl_amp_en_reg;
      rd_dat_d0(3 downto 1) <= ch_0_ctl_mode_reg;
      rd_dat_d0(31 downto 4) <= (others => '0');
    when "100000010" =>
      -- Reg ch_0_pi_kp
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(25 downto 0) <= ch_0_pi_kp_data_reg;
      rd_dat_d0(31 downto 26) <= ch_0_pi_kp_reserved_reg;
    when "100000011" =>
      -- Reg ch_0_pi_ti
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(25 downto 0) <= ch_0_pi_ti_data_reg;
      rd_dat_d0(31 downto 26) <= ch_0_pi_ti_reserved_reg;
    when "100000100" =>
      -- Reg ch_0_pi_sp
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_0_pi_sp_data_reg;
      rd_dat_d0(31 downto 16) <= ch_0_pi_sp_reserved_reg;
    when "100000101" =>
      -- Reg ch_0_dac
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_0_dac_data_reg;
      rd_dat_d0(31 downto 16) <= ch_0_dac_reserved_reg;
    when "100000110" =>
      -- Reg ch_0_lim
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_0_lim_a_reg;
      rd_dat_d0(31 downto 16) <= ch_0_lim_b_reg;
    when "100000111" =>
      -- Reg ch_0_cnt
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(21 downto 0) <= ch_0_cnt_data_reg;
      rd_dat_d0(31 downto 22) <= ch_0_cnt_reserved_reg;
    when "100010000" =>
      -- Reg ch_1_sta
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(0) <= rtmlamp_ohwr_ch_regs_i(1).sta_amp_iflag_l;
      rd_dat_d0(1) <= rtmlamp_ohwr_ch_regs_i(1).sta_amp_tflag_l;
      rd_dat_d0(2) <= rtmlamp_ohwr_ch_regs_i(1).sta_amp_iflag_r;
      rd_dat_d0(3) <= rtmlamp_ohwr_ch_regs_i(1).sta_amp_tflag_r;
      rd_dat_d0(31 downto 4) <= rtmlamp_ohwr_ch_regs_i(1).sta_reserved;
    when "100010001" =>
      -- Reg ch_1_ctl
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(0) <= ch_1_ctl_amp_en_reg;
      rd_dat_d0(3 downto 1) <= ch_1_ctl_mode_reg;
      rd_dat_d0(31 downto 4) <= (others => '0');
    when "100010010" =>
      -- Reg ch_1_pi_kp
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(25 downto 0) <= ch_1_pi_kp_data_reg;
      rd_dat_d0(31 downto 26) <= ch_1_pi_kp_reserved_reg;
    when "100010011" =>
      -- Reg ch_1_pi_ti
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(25 downto 0) <= ch_1_pi_ti_data_reg;
      rd_dat_d0(31 downto 26) <= ch_1_pi_ti_reserved_reg;
    when "100010100" =>
      -- Reg ch_1_pi_sp
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_1_pi_sp_data_reg;
      rd_dat_d0(31 downto 16) <= ch_1_pi_sp_reserved_reg;
    when "100010101" =>
      -- Reg ch_1_dac
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_1_dac_data_reg;
      rd_dat_d0(31 downto 16) <= ch_1_dac_reserved_reg;
    when "100010110" =>
      -- Reg ch_1_lim
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_1_lim_a_reg;
      rd_dat_d0(31 downto 16) <= ch_1_lim_b_reg;
    when "100010111" =>
      -- Reg ch_1_cnt
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(21 downto 0) <= ch_1_cnt_data_reg;
      rd_dat_d0(31 downto 22) <= ch_1_cnt_reserved_reg;
    when "100100000" =>
      -- Reg ch_2_sta
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(0) <= rtmlamp_ohwr_ch_regs_i(2).sta_amp_iflag_l;
      rd_dat_d0(1) <= rtmlamp_ohwr_ch_regs_i(2).sta_amp_tflag_l;
      rd_dat_d0(2) <= rtmlamp_ohwr_ch_regs_i(2).sta_amp_iflag_r;
      rd_dat_d0(3) <= rtmlamp_ohwr_ch_regs_i(2).sta_amp_tflag_r;
      rd_dat_d0(31 downto 4) <= rtmlamp_ohwr_ch_regs_i(2).sta_reserved;
    when "100100001" =>
      -- Reg ch_2_ctl
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(0) <= ch_2_ctl_amp_en_reg;
      rd_dat_d0(3 downto 1) <= ch_2_ctl_mode_reg;
      rd_dat_d0(31 downto 4) <= (others => '0');
    when "100100010" =>
      -- Reg ch_2_pi_kp
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(25 downto 0) <= ch_2_pi_kp_data_reg;
      rd_dat_d0(31 downto 26) <= ch_2_pi_kp_reserved_reg;
    when "100100011" =>
      -- Reg ch_2_pi_ti
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(25 downto 0) <= ch_2_pi_ti_data_reg;
      rd_dat_d0(31 downto 26) <= ch_2_pi_ti_reserved_reg;
    when "100100100" =>
      -- Reg ch_2_pi_sp
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_2_pi_sp_data_reg;
      rd_dat_d0(31 downto 16) <= ch_2_pi_sp_reserved_reg;
    when "100100101" =>
      -- Reg ch_2_dac
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_2_dac_data_reg;
      rd_dat_d0(31 downto 16) <= ch_2_dac_reserved_reg;
    when "100100110" =>
      -- Reg ch_2_lim
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_2_lim_a_reg;
      rd_dat_d0(31 downto 16) <= ch_2_lim_b_reg;
    when "100100111" =>
      -- Reg ch_2_cnt
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(21 downto 0) <= ch_2_cnt_data_reg;
      rd_dat_d0(31 downto 22) <= ch_2_cnt_reserved_reg;
    when "100110000" =>
      -- Reg ch_3_sta
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(0) <= rtmlamp_ohwr_ch_regs_i(3).sta_amp_iflag_l;
      rd_dat_d0(1) <= rtmlamp_ohwr_ch_regs_i(3).sta_amp_tflag_l;
      rd_dat_d0(2) <= rtmlamp_ohwr_ch_regs_i(3).sta_amp_iflag_r;
      rd_dat_d0(3) <= rtmlamp_ohwr_ch_regs_i(3).sta_amp_tflag_r;
      rd_dat_d0(31 downto 4) <= rtmlamp_ohwr_ch_regs_i(3).sta_reserved;
    when "100110001" =>
      -- Reg ch_3_ctl
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(0) <= ch_3_ctl_amp_en_reg;
      rd_dat_d0(3 downto 1) <= ch_3_ctl_mode_reg;
      rd_dat_d0(31 downto 4) <= (others => '0');
    when "100110010" =>
      -- Reg ch_3_pi_kp
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(25 downto 0) <= ch_3_pi_kp_data_reg;
      rd_dat_d0(31 downto 26) <= ch_3_pi_kp_reserved_reg;
    when "100110011" =>
      -- Reg ch_3_pi_ti
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(25 downto 0) <= ch_3_pi_ti_data_reg;
      rd_dat_d0(31 downto 26) <= ch_3_pi_ti_reserved_reg;
    when "100110100" =>
      -- Reg ch_3_pi_sp
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_3_pi_sp_data_reg;
      rd_dat_d0(31 downto 16) <= ch_3_pi_sp_reserved_reg;
    when "100110101" =>
      -- Reg ch_3_dac
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_3_dac_data_reg;
      rd_dat_d0(31 downto 16) <= ch_3_dac_reserved_reg;
    when "100110110" =>
      -- Reg ch_3_lim
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_3_lim_a_reg;
      rd_dat_d0(31 downto 16) <= ch_3_lim_b_reg;
    when "100110111" =>
      -- Reg ch_3_cnt
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(21 downto 0) <= ch_3_cnt_data_reg;
      rd_dat_d0(31 downto 22) <= ch_3_cnt_reserved_reg;
    when "101000000" =>
      -- Reg ch_4_sta
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(0) <= rtmlamp_ohwr_ch_regs_i(4).sta_amp_iflag_l;
      rd_dat_d0(1) <= rtmlamp_ohwr_ch_regs_i(4).sta_amp_tflag_l;
      rd_dat_d0(2) <= rtmlamp_ohwr_ch_regs_i(4).sta_amp_iflag_r;
      rd_dat_d0(3) <= rtmlamp_ohwr_ch_regs_i(4).sta_amp_tflag_r;
      rd_dat_d0(31 downto 4) <= rtmlamp_ohwr_ch_regs_i(4).sta_reserved;
    when "101000001" =>
      -- Reg ch_4_ctl
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(0) <= ch_4_ctl_amp_en_reg;
      rd_dat_d0(3 downto 1) <= ch_4_ctl_mode_reg;
      rd_dat_d0(31 downto 4) <= (others => '0');
    when "101000010" =>
      -- Reg ch_4_pi_kp
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(25 downto 0) <= ch_4_pi_kp_data_reg;
      rd_dat_d0(31 downto 26) <= ch_4_pi_kp_reserved_reg;
    when "101000011" =>
      -- Reg ch_4_pi_ti
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(25 downto 0) <= ch_4_pi_ti_data_reg;
      rd_dat_d0(31 downto 26) <= ch_4_pi_ti_reserved_reg;
    when "101000100" =>
      -- Reg ch_4_pi_sp
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_4_pi_sp_data_reg;
      rd_dat_d0(31 downto 16) <= ch_4_pi_sp_reserved_reg;
    when "101000101" =>
      -- Reg ch_4_dac
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_4_dac_data_reg;
      rd_dat_d0(31 downto 16) <= ch_4_dac_reserved_reg;
    when "101000110" =>
      -- Reg ch_4_lim
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_4_lim_a_reg;
      rd_dat_d0(31 downto 16) <= ch_4_lim_b_reg;
    when "101000111" =>
      -- Reg ch_4_cnt
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(21 downto 0) <= ch_4_cnt_data_reg;
      rd_dat_d0(31 downto 22) <= ch_4_cnt_reserved_reg;
    when "101010000" =>
      -- Reg ch_5_sta
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(0) <= rtmlamp_ohwr_ch_regs_i(5).sta_amp_iflag_l;
      rd_dat_d0(1) <= rtmlamp_ohwr_ch_regs_i(5).sta_amp_tflag_l;
      rd_dat_d0(2) <= rtmlamp_ohwr_ch_regs_i(5).sta_amp_iflag_r;
      rd_dat_d0(3) <= rtmlamp_ohwr_ch_regs_i(5).sta_amp_tflag_r;
      rd_dat_d0(31 downto 4) <= rtmlamp_ohwr_ch_regs_i(5).sta_reserved;
    when "101010001" =>
      -- Reg ch_5_ctl
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(0) <= ch_5_ctl_amp_en_reg;
      rd_dat_d0(3 downto 1) <= ch_5_ctl_mode_reg;
      rd_dat_d0(31 downto 4) <= (others => '0');
    when "101010010" =>
      -- Reg ch_5_pi_kp
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(25 downto 0) <= ch_5_pi_kp_data_reg;
      rd_dat_d0(31 downto 26) <= ch_5_pi_kp_reserved_reg;
    when "101010011" =>
      -- Reg ch_5_pi_ti
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(25 downto 0) <= ch_5_pi_ti_data_reg;
      rd_dat_d0(31 downto 26) <= ch_5_pi_ti_reserved_reg;
    when "101010100" =>
      -- Reg ch_5_pi_sp
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_5_pi_sp_data_reg;
      rd_dat_d0(31 downto 16) <= ch_5_pi_sp_reserved_reg;
    when "101010101" =>
      -- Reg ch_5_dac
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_5_dac_data_reg;
      rd_dat_d0(31 downto 16) <= ch_5_dac_reserved_reg;
    when "101010110" =>
      -- Reg ch_5_lim
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_5_lim_a_reg;
      rd_dat_d0(31 downto 16) <= ch_5_lim_b_reg;
    when "101010111" =>
      -- Reg ch_5_cnt
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(21 downto 0) <= ch_5_cnt_data_reg;
      rd_dat_d0(31 downto 22) <= ch_5_cnt_reserved_reg;
    when "101100000" =>
      -- Reg ch_6_sta
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(0) <= rtmlamp_ohwr_ch_regs_i(6).sta_amp_iflag_l;
      rd_dat_d0(1) <= rtmlamp_ohwr_ch_regs_i(6).sta_amp_tflag_l;
      rd_dat_d0(2) <= rtmlamp_ohwr_ch_regs_i(6).sta_amp_iflag_r;
      rd_dat_d0(3) <= rtmlamp_ohwr_ch_regs_i(6).sta_amp_tflag_r;
      rd_dat_d0(31 downto 4) <= rtmlamp_ohwr_ch_regs_i(6).sta_reserved;
    when "101100001" =>
      -- Reg ch_6_ctl
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(0) <= ch_6_ctl_amp_en_reg;
      rd_dat_d0(3 downto 1) <= ch_6_ctl_mode_reg;
      rd_dat_d0(31 downto 4) <= (others => '0');
    when "101100010" =>
      -- Reg ch_6_pi_kp
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(25 downto 0) <= ch_6_pi_kp_data_reg;
      rd_dat_d0(31 downto 26) <= ch_6_pi_kp_reserved_reg;
    when "101100011" =>
      -- Reg ch_6_pi_ti
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(25 downto 0) <= ch_6_pi_ti_data_reg;
      rd_dat_d0(31 downto 26) <= ch_6_pi_ti_reserved_reg;
    when "101100100" =>
      -- Reg ch_6_pi_sp
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_6_pi_sp_data_reg;
      rd_dat_d0(31 downto 16) <= ch_6_pi_sp_reserved_reg;
    when "101100101" =>
      -- Reg ch_6_dac
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_6_dac_data_reg;
      rd_dat_d0(31 downto 16) <= ch_6_dac_reserved_reg;
    when "101100110" =>
      -- Reg ch_6_lim
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_6_lim_a_reg;
      rd_dat_d0(31 downto 16) <= ch_6_lim_b_reg;
    when "101100111" =>
      -- Reg ch_6_cnt
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(21 downto 0) <= ch_6_cnt_data_reg;
      rd_dat_d0(31 downto 22) <= ch_6_cnt_reserved_reg;
    when "101110000" =>
      -- Reg ch_7_sta
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(0) <= rtmlamp_ohwr_ch_regs_i(7).sta_amp_iflag_l;
      rd_dat_d0(1) <= rtmlamp_ohwr_ch_regs_i(7).sta_amp_tflag_l;
      rd_dat_d0(2) <= rtmlamp_ohwr_ch_regs_i(7).sta_amp_iflag_r;
      rd_dat_d0(3) <= rtmlamp_ohwr_ch_regs_i(7).sta_amp_tflag_r;
      rd_dat_d0(31 downto 4) <= rtmlamp_ohwr_ch_regs_i(7).sta_reserved;
    when "101110001" =>
      -- Reg ch_7_ctl
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(0) <= ch_7_ctl_amp_en_reg;
      rd_dat_d0(3 downto 1) <= ch_7_ctl_mode_reg;
      rd_dat_d0(31 downto 4) <= (others => '0');
    when "101110010" =>
      -- Reg ch_7_pi_kp
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(25 downto 0) <= ch_7_pi_kp_data_reg;
      rd_dat_d0(31 downto 26) <= ch_7_pi_kp_reserved_reg;
    when "101110011" =>
      -- Reg ch_7_pi_ti
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(25 downto 0) <= ch_7_pi_ti_data_reg;
      rd_dat_d0(31 downto 26) <= ch_7_pi_ti_reserved_reg;
    when "101110100" =>
      -- Reg ch_7_pi_sp
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_7_pi_sp_data_reg;
      rd_dat_d0(31 downto 16) <= ch_7_pi_sp_reserved_reg;
    when "101110101" =>
      -- Reg ch_7_dac
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_7_dac_data_reg;
      rd_dat_d0(31 downto 16) <= ch_7_dac_reserved_reg;
    when "101110110" =>
      -- Reg ch_7_lim
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_7_lim_a_reg;
      rd_dat_d0(31 downto 16) <= ch_7_lim_b_reg;
    when "101110111" =>
      -- Reg ch_7_cnt
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(21 downto 0) <= ch_7_cnt_data_reg;
      rd_dat_d0(31 downto 22) <= ch_7_cnt_reserved_reg;
    when "110000000" =>
      -- Reg ch_8_sta
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(0) <= rtmlamp_ohwr_ch_regs_i(8).sta_amp_iflag_l;
      rd_dat_d0(1) <= rtmlamp_ohwr_ch_regs_i(8).sta_amp_tflag_l;
      rd_dat_d0(2) <= rtmlamp_ohwr_ch_regs_i(8).sta_amp_iflag_r;
      rd_dat_d0(3) <= rtmlamp_ohwr_ch_regs_i(8).sta_amp_tflag_r;
      rd_dat_d0(31 downto 4) <= rtmlamp_ohwr_ch_regs_i(8).sta_reserved;
    when "110000001" =>
      -- Reg ch_8_ctl
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(0) <= ch_8_ctl_amp_en_reg;
      rd_dat_d0(3 downto 1) <= ch_8_ctl_mode_reg;
      rd_dat_d0(31 downto 4) <= (others => '0');
    when "110000010" =>
      -- Reg ch_8_pi_kp
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(25 downto 0) <= ch_8_pi_kp_data_reg;
      rd_dat_d0(31 downto 26) <= ch_8_pi_kp_reserved_reg;
    when "110000011" =>
      -- Reg ch_8_pi_ti
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(25 downto 0) <= ch_8_pi_ti_data_reg;
      rd_dat_d0(31 downto 26) <= ch_8_pi_ti_reserved_reg;
    when "110000100" =>
      -- Reg ch_8_pi_sp
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_8_pi_sp_data_reg;
      rd_dat_d0(31 downto 16) <= ch_8_pi_sp_reserved_reg;
    when "110000101" =>
      -- Reg ch_8_dac
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_8_dac_data_reg;
      rd_dat_d0(31 downto 16) <= ch_8_dac_reserved_reg;
    when "110000110" =>
      -- Reg ch_8_lim
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_8_lim_a_reg;
      rd_dat_d0(31 downto 16) <= ch_8_lim_b_reg;
    when "110000111" =>
      -- Reg ch_8_cnt
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(21 downto 0) <= ch_8_cnt_data_reg;
      rd_dat_d0(31 downto 22) <= ch_8_cnt_reserved_reg;
    when "110010000" =>
      -- Reg ch_9_sta
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(0) <= rtmlamp_ohwr_ch_regs_i(9).sta_amp_iflag_l;
      rd_dat_d0(1) <= rtmlamp_ohwr_ch_regs_i(9).sta_amp_tflag_l;
      rd_dat_d0(2) <= rtmlamp_ohwr_ch_regs_i(9).sta_amp_iflag_r;
      rd_dat_d0(3) <= rtmlamp_ohwr_ch_regs_i(9).sta_amp_tflag_r;
      rd_dat_d0(31 downto 4) <= rtmlamp_ohwr_ch_regs_i(9).sta_reserved;
    when "110010001" =>
      -- Reg ch_9_ctl
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(0) <= ch_9_ctl_amp_en_reg;
      rd_dat_d0(3 downto 1) <= ch_9_ctl_mode_reg;
      rd_dat_d0(31 downto 4) <= (others => '0');
    when "110010010" =>
      -- Reg ch_9_pi_kp
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(25 downto 0) <= ch_9_pi_kp_data_reg;
      rd_dat_d0(31 downto 26) <= ch_9_pi_kp_reserved_reg;
    when "110010011" =>
      -- Reg ch_9_pi_ti
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(25 downto 0) <= ch_9_pi_ti_data_reg;
      rd_dat_d0(31 downto 26) <= ch_9_pi_ti_reserved_reg;
    when "110010100" =>
      -- Reg ch_9_pi_sp
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_9_pi_sp_data_reg;
      rd_dat_d0(31 downto 16) <= ch_9_pi_sp_reserved_reg;
    when "110010101" =>
      -- Reg ch_9_dac
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_9_dac_data_reg;
      rd_dat_d0(31 downto 16) <= ch_9_dac_reserved_reg;
    when "110010110" =>
      -- Reg ch_9_lim
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_9_lim_a_reg;
      rd_dat_d0(31 downto 16) <= ch_9_lim_b_reg;
    when "110010111" =>
      -- Reg ch_9_cnt
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(21 downto 0) <= ch_9_cnt_data_reg;
      rd_dat_d0(31 downto 22) <= ch_9_cnt_reserved_reg;
    when "110100000" =>
      -- Reg ch_10_sta
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(0) <= rtmlamp_ohwr_ch_regs_i(10).sta_amp_iflag_l;
      rd_dat_d0(1) <= rtmlamp_ohwr_ch_regs_i(10).sta_amp_tflag_l;
      rd_dat_d0(2) <= rtmlamp_ohwr_ch_regs_i(10).sta_amp_iflag_r;
      rd_dat_d0(3) <= rtmlamp_ohwr_ch_regs_i(10).sta_amp_tflag_r;
      rd_dat_d0(31 downto 4) <= rtmlamp_ohwr_ch_regs_i(10).sta_reserved;
    when "110100001" =>
      -- Reg ch_10_ctl
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(0) <= ch_10_ctl_amp_en_reg;
      rd_dat_d0(3 downto 1) <= ch_10_ctl_mode_reg;
      rd_dat_d0(31 downto 4) <= (others => '0');
    when "110100010" =>
      -- Reg ch_10_pi_kp
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(25 downto 0) <= ch_10_pi_kp_data_reg;
      rd_dat_d0(31 downto 26) <= ch_10_pi_kp_reserved_reg;
    when "110100011" =>
      -- Reg ch_10_pi_ti
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(25 downto 0) <= ch_10_pi_ti_data_reg;
      rd_dat_d0(31 downto 26) <= ch_10_pi_ti_reserved_reg;
    when "110100100" =>
      -- Reg ch_10_pi_sp
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_10_pi_sp_data_reg;
      rd_dat_d0(31 downto 16) <= ch_10_pi_sp_reserved_reg;
    when "110100101" =>
      -- Reg ch_10_dac
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_10_dac_data_reg;
      rd_dat_d0(31 downto 16) <= ch_10_dac_reserved_reg;
    when "110100110" =>
      -- Reg ch_10_lim
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_10_lim_a_reg;
      rd_dat_d0(31 downto 16) <= ch_10_lim_b_reg;
    when "110100111" =>
      -- Reg ch_10_cnt
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(21 downto 0) <= ch_10_cnt_data_reg;
      rd_dat_d0(31 downto 22) <= ch_10_cnt_reserved_reg;
    when "110110000" =>
      -- Reg ch_11_sta
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(0) <= rtmlamp_ohwr_ch_regs_i(11).sta_amp_iflag_l;
      rd_dat_d0(1) <= rtmlamp_ohwr_ch_regs_i(11).sta_amp_tflag_l;
      rd_dat_d0(2) <= rtmlamp_ohwr_ch_regs_i(11).sta_amp_iflag_r;
      rd_dat_d0(3) <= rtmlamp_ohwr_ch_regs_i(11).sta_amp_tflag_r;
      rd_dat_d0(31 downto 4) <= rtmlamp_ohwr_ch_regs_i(11).sta_reserved;
    when "110110001" =>
      -- Reg ch_11_ctl
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(0) <= ch_11_ctl_amp_en_reg;
      rd_dat_d0(3 downto 1) <= ch_11_ctl_mode_reg;
      rd_dat_d0(31 downto 4) <= (others => '0');
    when "110110010" =>
      -- Reg ch_11_pi_kp
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(25 downto 0) <= ch_11_pi_kp_data_reg;
      rd_dat_d0(31 downto 26) <= ch_11_pi_kp_reserved_reg;
    when "110110011" =>
      -- Reg ch_11_pi_ti
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(25 downto 0) <= ch_11_pi_ti_data_reg;
      rd_dat_d0(31 downto 26) <= ch_11_pi_ti_reserved_reg;
    when "110110100" =>
      -- Reg ch_11_pi_sp
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_11_pi_sp_data_reg;
      rd_dat_d0(31 downto 16) <= ch_11_pi_sp_reserved_reg;
    when "110110101" =>
      -- Reg ch_11_dac
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_11_dac_data_reg;
      rd_dat_d0(31 downto 16) <= ch_11_dac_reserved_reg;
    when "110110110" =>
      -- Reg ch_11_lim
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(15 downto 0) <= ch_11_lim_a_reg;
      rd_dat_d0(31 downto 16) <= ch_11_lim_b_reg;
    when "110110111" =>
      -- Reg ch_11_cnt
      rd_ack_d0 <= rd_req_int;
      rd_dat_d0(21 downto 0) <= ch_11_cnt_data_reg;
      rd_dat_d0(31 downto 22) <= ch_11_cnt_reserved_reg;
    when others =>
      rd_ack_d0 <= rd_req_int;
    end case;
  end process;
end syn;
